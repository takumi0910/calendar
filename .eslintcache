[{"C:\\Users\\takumi\\calendar\\src\\index.js":"1","C:\\Users\\takumi\\calendar\\src\\App.js":"2","C:\\Users\\takumi\\calendar\\src\\form.js":"3","C:\\Users\\takumi\\calendar\\src\\store\\index.js":"4","C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js":"5","C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js":"6","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\index.js":"7","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\App.js":"8","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\modal.js":"9","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Modal.js":"10"},{"size":314,"mtime":1615798829567,"results":"11","hashOfConfig":"12"},{"size":14616,"mtime":1615798665403,"results":"13","hashOfConfig":"12"},{"size":1563,"mtime":1612856435983,"results":"14","hashOfConfig":"12"},{"size":749,"mtime":1612855787878,"results":"15","hashOfConfig":"12"},{"size":638,"mtime":1615428811278,"results":"16","hashOfConfig":"12"},{"size":239,"mtime":1615798863426,"results":"17","hashOfConfig":"12"},{"size":231,"mtime":1617858807037,"results":"18","hashOfConfig":"19"},{"size":13113,"mtime":1618077496922,"results":"20","hashOfConfig":"19"},{"size":1770,"mtime":1617868122601,"results":"21","hashOfConfig":"22"},{"size":1770,"mtime":1617868122601,"results":"23","hashOfConfig":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"y8a8bw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1wvzljs",{"filePath":"42","messages":"43","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wdt5tn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"C:\\Users\\takumi\\calendar\\src\\index.js",["50","51","52","53"],"C:\\Users\\takumi\\calendar\\src\\App.js",["54","55","56","57","58","59","60","61","62","63"],"C:\\Users\\takumi\\calendar\\src\\form.js",[],["64","65"],"C:\\Users\\takumi\\calendar\\src\\store\\index.js",[],["66","67"],"C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js",["68","69"],"C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js",[],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\index.js",["70","71"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));",["72","73"],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\App.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React from 'react'\nimport Calendar from 'react-calendar';\nimport Modal from \"./components/Modal\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: true,\n      //月のデータ\n      month_days: '',\n      selectedDate: '',\n      backups: '',\n      formvalues: '',\n      start_hour: '',\n      start_minute: '',\n      end_hour: '',\n      end_minute: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Start_timeMinutes = this.Start_timeMinutes.bind(this);\n    this.Start_timeHours = this.Start_timeHours.bind(this);\n    this.End_timeHours = this.End_timeHours.bind(this);\n    this.End_timeMinutes = this.End_timeMinutes.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n  }\n\n\n  // state の日付と同じ表記に変換\n  getFormatDate(date) {\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\n  }\n\n  //日付ブロックをクリックした時の処理\n  openModal(value, e) {\n    //×ボタンを押された際の処理\n    if (e.target.title === 'delite') {\n      this.setState({ isSubmitted: true })\n    } else {\n      //×ボタン以外の日付ブロックをクリックした際の処理\n      this.setState({ isSubmitted: false })\n    }\n\n    //選択した日の年月日を取得\n    this.setState({ selectedDate: value })\n  }\n\n  //モーダル内の×ボタンを押したときの処理\n  closeModal() {\n    this.setState({ isSubmitted: true })\n  }\n\n  //日付の内容を出力\n  getTileContent({ date, view }) {\n    // 月表示のときのみ\n    if (view !== 'month') {\n      return null;\n    }\n    //日付の形式を表示可能に変えてくれる\n    const day = this.getFormatDate(date);\n    return (\n      <p>\n        <br />\n        {\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\n            return (\n              <div className='plans'>\n                <button className={day} id={date.id} title='delete' onClick={this.deleteState}>×</button>\n                <button className={day} id={date.id} onClick={this.editState}>{date.text}</button>\n                <br />\n              </div>\n            )\n          })\n        }\n      </p>\n    );\n  }\n\n  //ランダムなidの作成\n  getUniqueStr(myStrong) {\n    var strong = 1000;\n    if (myStrong) strong = myStrong;\n    return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n  }\n\n  //予定の内容を設定\n  handleChange(event) {\n    const value = event.target.value\n    this.setState({ formvalues: value })\n  }\n\n  //予定が始まる時間を設定（1時間単位）\n  Start_timeHours() {\n    let options = []\n    for (var i = 0; i <= 23; i++) {\n      options.push(<option value={i}>{i}</option>)\n    }\n    return (\n      <select defaultValue={this.state.backups[0]}\n        onChange={(e) => {\n          this.setState({ start_hour: e.target.value })\n        }} >\n        {options}\n      </select>\n    )\n  }\n\n  //予定が始まる時間を設定（10分単位）\n  Start_timeMinutes() {\n    let options = []\n    for (var i = 0; i <= 50; i++) {\n      let j = ('0' + i).slice(-2);\n      if (j % 10 == 0) {\n        options.push(<option value={j}>{j}</option>)\n      }\n    }\n    return (\n      <select defaultValue={this.state.backups[1]}\n        onChange={(e) => {\n          this.setState({ start_minute: e.target.value })\n        }}>\n        {options}\n      </select>\n    )\n  }\n\n  End_timeHours() {\n    let options = []\n    let limited_h = this.state.start_hour\n    let end_h = this.state.end_hour\n\n    if (limited_h === '' && this.state.backups[0] === undefined) {\n      //\n    } else if (limited_h === '' && this.state.backups[0] !== '') {\n      limited_h = this.state.backups[0]\n    }\n\n    for (var i = 0; i <= 23; i++) {\n      if (i >= limited_h) {\n        if (i !== end_h) {\n          options.push(<option value={i}>{i}</option>)\n        }\n        else if (i === end_h) {\n          options.push(<option value={i} selected>{i}</option>)\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[2]}\n        onChange={(e) => {\n          this.setState({ end_hour: e.target.value })\n        }}>\n        {options}\n      </select >\n    )\n  }\n\n\n\n  //予定が終わる時間を設定（1分単位）\n  End_timeMinutes() {\n    let options = []\n    let limited_minutes = this.state.start_minute\n    let start_h = this.state.start_hour\n    let end_c = this.state.end_minute\n    let end_s = this.state.backups[3]\n    let end_h = this.state.end_hour\n    let end_m = this.state.backups[1]\n    let start_dh = this.state.backups[0]\n    let end_dh = this.state.backups[2]\n    let decide = 'a'\n\n    if (limited_minutes === '' && end_m !== undefined) {\n      limited_minutes = end_m\n    }\n\n    if (end_c === '' && end_s !== undefined) {\n      end_c = end_s\n    }\n\n\n    //全部空なので同じ値\n    if (start_h === '' && end_h === '' && start_dh === undefined && end_dh === undefined) {\n      decide = 'b'\n    }\n    //backups同士の値が同じ\n    else if (start_h === '' && end_h === '' && start_dh !== undefined && end_dh !== undefined && start_dh === end_dh) {\n      decide = 'c'\n    }\n    //end_hが空、ただstart_hとbackupが同じ\n    else if (start_h !== '' && end_h === '' && start_dh !== undefined && end_dh !== undefined && start_h === end_dh) {\n      decide = 'd'\n    }\n    //start_hが空、ただend_hとbackupが同じ\n    else if (start_h === '' && end_h !== '' && start_dh !== undefined && end_dh !== undefined && start_dh === end_h) {\n      decide = 'e'\n    }\n    else if (start_h !== '' && end_h === '') {\n      decide = 'f'\n    }//どっちも値自体は入っていて違う値 \n    else if (start_h !== '' && end_h !== '' && start_h !== end_h) {\n      decide = 'g'\n    } //どっちも値自体は入っていて同じ値 \n    else if (start_h !== '' && end_h !== '' && start_h === end_h) {\n      decide = 'h'\n    }\n\n\n    if (decide === 'b' || decide === 'f' || decide === 'h') {\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 == 0 && i >= limited_minutes) {\n          let j = ('0' + i).slice(-2);\n          if (i != end_c) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    } else if (decide === 'a' || decide === 'g') {\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 == 0) {\n          let j = ('0' + i).slice(-2);\n          if (i != end_c) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    } else if (decide === 'c' || decide === 'd' || decide === 'e') {\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 == 0 && i >= limited_minutes) {\n          let j = ('0' + i).slice(-2);\n          if (i != end_c) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[3]}\n        onChange={(e) => this.setState({ end_minute: e.target.value })}>\n        {options}\n      </select>\n    )\n  }\n\n  //予定追加or予定編集処理\n  handleSubmit() {\n    //モーダルの非表示\n    this.setState({ isSubmitted: true })\n\n    const date = this.getFormatDate(new Date(this.state.selectedDate))\n\n    const copySate = this.state.month_days\n\n    const dates = Object.keys(copySate)\n\n    const index = dates.indexOf(date)\n\n    const random_id = this.getUniqueStr()\n\n    //stateを変数に代入\n    let start_h = this.state.start_hour\n    let start_m = this.state.start_minute\n    let end_h = this.state.end_hour\n    let end_m = this.state.end_minute\n    let form = this.state.formvalues\n\n    // 処理を関数化して引数でできないかな\n    // 予定が始まる時間が空か確かめる（1時間単位）\n    if (start_h === '' && this.state.backups[0] !== undefined) {\n      start_h = this.state.backups[0]\n    } else if (start_h === '' && this.state.backups[0] == undefined) {\n      start_h = '0'\n    }\n\n    //予定が始まる時間が空か確かめる（1分単位）\n    if (start_m === '' && this.state.backups[1] !== undefined) {\n      start_m = this.state.backups[1]\n    } else if (start_m === '' && this.state.backups[1] == undefined) {\n      start_m = '00'\n    }\n\n    //予定が終わる時間が空か確かめる（1時間単位）\n    if (end_h === '' && this.state.backups[2] !== undefined) {\n      if (this.state.start_hour > this.state.backups[2]) {\n        end_h = this.state.start_hour\n      } else {\n        end_h = this.state.backups[2]\n      }\n\n    } else if (end_h === '' && this.state.backups[2] == undefined && start_h !== '') {\n      end_h = start_h\n    }\n\n    if (end_h < start_h) {\n      end_h = start_h\n    }\n\n    //予定が終わる時間が空か確かめる（1分単位）\n    if (end_m === '' && this.state.backups[3] !== undefined) {\n      end_m = this.state.backups[3]\n    } else if (end_m === '' && this.state.backups[3] == undefined && start_m !== '') {\n      end_m = start_m\n    }\n\n    //入力内容が空か確かめる\n    if (form === '' && this.state.backups[4] !== '') {\n      form = this.state.backups[4]\n    } else if (form === '' && this.state.backups[4] == '') {\n      form = ''\n    }\n\n    if (start_h === end_h && start_m > end_m) {\n      end_m = start_m\n    }\n\n\n\n\n    //ここから下はhandleSubmit短縮不能\n\n    //予定の開始時間と終了時間を出力する表示に変更\n    let start_time = start_h + ':' + start_m\n    let end_time = end_h + ':' + end_m\n\n\n    if (form === undefined && this.state.backups[4] === undefined) {\n      alert('予定を入力して下さい')\n    }\n    else if (index !== -1) {\n      copySate[date].push({\n        id: random_id,\n        text: (start_time + '～' + end_time + '\\n' + form),\n        backup: [start_h, start_m, end_h, end_m, form]\n      })\n    }\n    else if (form !== \"\" && start_time !== ':' || end_time !== ':') {\n      copySate[date] = [\n        {\n          id: random_id,\n          text: (start_time + '～' + end_time + '\\n' + form),\n          backup: [start_h, start_m, end_h, end_m, form]\n        }\n      ]\n    }\n\n    this.setState({ month_days: copySate })\n    this.setState({ backups: '' })\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n  }\n\n\n\n  //予定を編集する処理\n  editState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const onedays = this.state.month_days[day]\n\n    for (let i = 0; i < onedays.length; i++) {\n      let oneday = onedays[i]\n      if (oneday.id === key) {\n        this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4],] })\n        this.deleteState(e)\n      }\n    }\n  }\n\n\n\n  //予定を消す処理\n  deleteState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const id_copy = this.state.month_days[day]\n\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n\n    for (let i = 0; i < id_copy.length; i++) {\n      if (id_copy[i].id === key) {\n        this.state.month_days[day].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n\n\n  // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\n  componentDidMount() {\n    if (localStorage.app) {\n      const saveDate = JSON.parse(localStorage.app);\n      this.setState({\n        month_days: saveDate.month_days,\n      })\n    }\n  }\n\n\n\n  // stateが変更されたら実行\n  componentDidUpdate() {\n    // ローカルストレージにステートの情報を保存\n    localStorage.setItem('app', JSON.stringify(this.state));\n  }\n\n\n\n  render() {\n    console.log(this.state)\n    const title = ({ date, view }) => this.getTileContent({ date, view })\n    return (\n      <>\n        <Calendar\n          locale=\"ja-JP\"\n          tileContent={title}\n          value={this.state.date}\n          onClickDay={this.openModal.bind(this)}\n        />\n        <Modal\n          isSubmitted={this.state.isSubmitted}\n          selectedDate={this.state.selectedDate}\n          formvalues={this.state.formvalues}\n          backups={this.state.backups}\n          closeModal={this.closeModal}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          deleteState={this.deleteState}\n          Start_timeHours={this.Start_timeHours}\n          Start_timeMinutes={this.Start_timeMinutes}\n          End_timeHours={this.End_timeHours}\n          End_timeMinutes={this.End_timeMinutes}\n        />\n      </>\n    );\n  }\n}","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\modal.js",["90"],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Modal.js",["91"],"import React from 'react'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.backups[4] !== null) {\r\n      return this.props.backups[4]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back'>\r\n            <div className='modal'>\r\n              <button className='close-button'\r\n                onClick={this.props.closeModal}\r\n              >×</button>\r\n              <p>{this.formatDate(this.props.selectedDate)}</p>\r\n              <p className='plans-time'>予定時間</p>\r\n              <div className='time-box'>\r\n                {this.props.Start_timeHours()}\r\n                <p>:</p>\r\n                {this.props.Start_timeMinutes()}  \r\n                <p>～</p>\r\n                {this.props.End_timeHours()}\r\n                <p>:</p>\r\n                {this.props.End_timeMinutes()}\r\n              </div>\r\n              <p className='plans-content'>予定の内容</p>\r\n              <input defaultValue=''\r\n                onChange={this.props.handleChange}\r\n                defaultValue={this.defaultForm()}\r\n              />\r\n              <input\r\n                className='submit-btn'\r\n                type='submit'\r\n                value='登録'\r\n              />\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal",{"ruleId":"92","severity":1,"message":"93","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"97","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"98","line":8,"column":7,"nodeType":"94","messageId":"95","endLine":8,"endColumn":11},{"ruleId":"92","severity":1,"message":"99","line":115,"column":11,"nodeType":"94","messageId":"95","endLine":115,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":135,"column":9,"nodeType":"102","endLine":135,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":147,"column":11,"nodeType":"102","endLine":147,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":161,"column":11,"nodeType":"102","endLine":161,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":174,"column":11,"nodeType":"102","endLine":174,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":186,"column":11,"nodeType":"102","endLine":186,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":199,"column":11,"nodeType":"102","endLine":199,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":212,"column":11,"nodeType":"102","endLine":212,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":224,"column":11,"nodeType":"102","endLine":224,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":243,"column":9,"nodeType":"102","endLine":243,"endColumn":30},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"92","severity":1,"message":"109","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"110","severity":2,"message":"111","line":4,"column":38,"nodeType":"94","messageId":"112","endLine":4,"endColumn":47},{"ruleId":"92","severity":1,"message":"96","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"98","line":6,"column":7,"nodeType":"94","messageId":"95","endLine":6,"endColumn":11},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":115,"column":18,"nodeType":"117","messageId":"118","endLine":115,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":214,"column":20,"nodeType":"117","messageId":"118","endLine":214,"endColumn":22},{"ruleId":"115","severity":1,"message":"119","line":216,"column":17,"nodeType":"117","messageId":"118","endLine":216,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":225,"column":16,"nodeType":"94","messageId":"122","endLine":225,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":226,"column":20,"nodeType":"117","messageId":"118","endLine":226,"endColumn":22},{"ruleId":"115","severity":1,"message":"119","line":228,"column":17,"nodeType":"117","messageId":"118","endLine":228,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":237,"column":16,"nodeType":"94","messageId":"122","endLine":237,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":238,"column":20,"nodeType":"117","messageId":"118","endLine":238,"endColumn":22},{"ruleId":"115","severity":1,"message":"119","line":240,"column":17,"nodeType":"117","messageId":"118","endLine":240,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":284,"column":56,"nodeType":"117","messageId":"118","endLine":284,"endColumn":58},{"ruleId":"115","severity":1,"message":"116","line":291,"column":56,"nodeType":"117","messageId":"118","endLine":291,"endColumn":58},{"ruleId":"115","severity":1,"message":"116","line":303,"column":54,"nodeType":"117","messageId":"118","endLine":303,"endColumn":56},{"ruleId":"115","severity":1,"message":"116","line":314,"column":54,"nodeType":"117","messageId":"118","endLine":314,"endColumn":56},{"ruleId":"115","severity":1,"message":"116","line":321,"column":53,"nodeType":"117","messageId":"118","endLine":321,"endColumn":55},{"ruleId":"123","severity":1,"message":"124","line":349,"column":26,"nodeType":"125","messageId":"126","endLine":349,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":349,"column":48,"nodeType":"125","messageId":"126","endLine":349,"endColumn":50},{"ruleId":"127","severity":1,"message":"128","line":41,"column":17,"nodeType":"129","endLine":41,"endColumn":50},{"ruleId":"127","severity":1,"message":"128","line":41,"column":17,"nodeType":"129","endLine":41,"endColumn":50},"no-unused-vars","'CalendarBoard' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'RenderList' is defined but never used.","'Tool' is assigned a value but never used.","'newMonth_days' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],"'react' is defined but never used.","no-undef","'Component' is not defined.","undef",["130"],["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'i' is already defined.","redeclared","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]