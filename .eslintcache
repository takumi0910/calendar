[{"C:\\Users\\takumi\\calendar\\src\\index.js":"1","C:\\Users\\takumi\\calendar\\src\\App.js":"2","C:\\Users\\takumi\\calendar\\src\\form.js":"3","C:\\Users\\takumi\\calendar\\src\\store\\index.js":"4","C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js":"5","C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js":"6","C:\\Users\\takumi\\Desktop\\calendar\\src\\index.js":"7","C:\\Users\\takumi\\Desktop\\calendar\\src\\App.js":"8","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\Auth.js":"9","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\Login.js":"10","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\Calendar.js":"11","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SignUp.js":"12","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\Nav.js":"13","C:\\Users\\takumi\\Desktop\\calendar\\src\\Firebase.js":"14","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\Modal.js":"15","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\endHour.js":"16","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\startHour.js":"17","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\endMinute.js":"18","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\tileColor.js":"19","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\startMinute.js":"20","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SocialLogin\\Google.js":"21","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SocialLogin\\Facebook.js":"22"},{"size":314,"mtime":1615798829567,"results":"23","hashOfConfig":"24"},{"size":14616,"mtime":1615798665403,"results":"25","hashOfConfig":"24"},{"size":1563,"mtime":1612856435983,"results":"26","hashOfConfig":"24"},{"size":749,"mtime":1612855787878,"results":"27","hashOfConfig":"24"},{"size":638,"mtime":1615428811278,"results":"28","hashOfConfig":"24"},{"size":239,"mtime":1615798863426,"results":"29","hashOfConfig":"24"},{"size":232,"mtime":1621909689513,"results":"30","hashOfConfig":"31"},{"size":673,"mtime":1621910289006,"results":"32","hashOfConfig":"31"},{"size":1233,"mtime":1621924650462,"results":"33","hashOfConfig":"31"},{"size":4106,"mtime":1621926265901,"results":"34","hashOfConfig":"31"},{"size":5543,"mtime":1621479393662,"results":"35","hashOfConfig":"31"},{"size":3854,"mtime":1621924889633,"results":"36","hashOfConfig":"31"},{"size":619,"mtime":1621478684471,"results":"37","hashOfConfig":"31"},{"size":666,"mtime":1621911569773,"results":"38","hashOfConfig":"31"},{"size":6622,"mtime":1621299476882,"results":"39","hashOfConfig":"31"},{"size":1379,"mtime":1620872742835,"results":"40","hashOfConfig":"31"},{"size":709,"mtime":1620872769164,"results":"41","hashOfConfig":"31"},{"size":3015,"mtime":1620872858997,"results":"42","hashOfConfig":"31"},{"size":489,"mtime":1620873297411,"results":"43","hashOfConfig":"31"},{"size":812,"mtime":1620872772952,"results":"44","hashOfConfig":"31"},{"size":1313,"mtime":1621926106598,"results":"45","hashOfConfig":"31"},{"size":1282,"mtime":1621926441150,"results":"46","hashOfConfig":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"y8a8bw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"tkghoi",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\takumi\\calendar\\src\\index.js",["99","100","101","102"],"C:\\Users\\takumi\\calendar\\src\\App.js",["103","104","105","106","107","108","109","110","111","112"],"C:\\Users\\takumi\\calendar\\src\\form.js",[],["113","114"],"C:\\Users\\takumi\\calendar\\src\\store\\index.js",[],["115","116"],"C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js",["117","118"],"C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\index.js",["119","120"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));",["121","122"],"C:\\Users\\takumi\\Desktop\\calendar\\src\\App.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\Auth.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\Login.js",["123"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\nimport GoogleAuth from './SocialLogin/Google';\r\nimport Facebook from './SocialLogin/Facebook';\r\n\r\nclass Login extends React.Component {\r\n    handleOnLogin(values) {\r\n        //サインイン（ログイン）処理\r\n        firebase.auth().signInWithEmailAndPassword(values.email, values.password)\r\n            .then(() => {\r\n                //正常終了時\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                //エラー発生時\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    GoogleLogin() {\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='back'>\r\n                <Container className='login-form'>\r\n                    <Formik\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={(values) => this.handleOnLogin(values)}\r\n                        validationSchema={Yup.object().shape({\r\n                            email: Yup.string().email('メールアドレスを正しい形式で入力してください').required('メールアドレスは記入必須です'),\r\n                            password: Yup.string().required('パスワードは入力必須です'),\r\n                        })}\r\n                    >\r\n                        {\r\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        size='medium'\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className='email'\r\n                                        id=\"email-form\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.email && errors.email ? true : false}\r\n                                    />\r\n                                    <p className='mail-error'>{errors.email}</p>\r\n                                    <TextField label=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password-form\"\r\n                                        className='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.password && errors.password ? true : false}\r\n                                    />\r\n                                    <p className='pass-error'>{errors.password}</p>\r\n                                    <Button className='btn' variant=\"contained\" color='primary' type='submit'>ログイン</Button>\r\n                                </form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                    <div className='signup-wrap'>\r\n                        <p className='signup'>初めてご利用される方はこちら<Link to='/signup'><a className='signup-link'>新規登録</a></Link></p>\r\n\r\n                    </div>\r\n                </Container>\r\n                <div class='test'>\r\n                    <GoogleAuth\r\n                        GoogleLogin={this.GoogleLogin.bind(this)}\r\n                    />\r\n                    <Facebook/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\Calendar.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SignUp.js",["124"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    handleOnSubmit(values) {\r\n        //新規登録処理\r\n        firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\r\n            .then(() => {\r\n                //Homeに移動\r\n                this.props.history.push(\"/login\");\r\n            })\r\n            .catch(() => {\r\n                console.log('error')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let finishSignUp;\r\n        finishSignUp = (\r\n            <div className='finish'>\r\n                <h2>登録完了</h2>\r\n                <Link to='/login'>\r\n                    <button>ログイン画面へ</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div className='back'>\r\n                <Container className='login-form'>\r\n                    <h2 className='signup-title'>新規会員登録</h2>\r\n                    <Formik\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={(values) => this.handleOnSubmit(values)}\r\n                        validationSchema={Yup.object().shape({\r\n                            email: Yup.string().email('メールアドレスを正しい形式で入力してください').required('メールアドレスは記入必須です'),\r\n                            password: Yup.string().min(8, 'パスワードは8文字以上に設定してください').required('パスワードは入力必須です'),\r\n                        })}\r\n                    >\r\n                        {\r\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        size='medium'\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className='email'\r\n                                        id=\"email-form\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.email && errors.email ? true : false}\r\n                                    />\r\n                                    <p className='mail-error'>{errors.email}</p>\r\n                                    <TextField label=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password-form\"\r\n                                        className='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.password && errors.password ? true : false}\r\n                                    />\r\n                                    <p className='pass-error'>{errors.password}</p>\r\n                                    <Button className='btn' variant=\"contained\" color='primary' type='submit'>登録</Button>\r\n                                </form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\Nav.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\Firebase.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\Modal.js",["125","126"],"import React from 'react'\r\nimport EndHour from './set_time/endHour'\r\nimport EndMinute from './set_time/endMinute'\r\nimport StartHour from './set_time/startHour'\r\nimport TileColor from './set_time/tileColor'\r\nimport StartMinute from './set_time/startMinute'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //ランダムなidの作成\r\n  getUniqueStr(myStrong = 1000) {\r\n    return new Date().getTime().toString(16) + Math.floor(myStrong * Math.random()).toString(16)\r\n  }\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.origin.backups[4] !== null) {\r\n      return this.props.origin.backups[4]\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.props.handleClose()\r\n\r\n    let date = this.props.getFormatDate(new Date(this.props.origin.selectedDate))\r\n\r\n    const copySate = this.props.origin.month_days\r\n\r\n    const dates = Object.keys(copySate)\r\n\r\n    const index = dates.indexOf(date)\r\n\r\n    const random_id = this.getUniqueStr()\r\n\r\n    date = Number(date)\r\n\r\n    //props.originを変数に代入\r\n    let startH = this.props.origin.startHour\r\n    let startM = this.props.origin.startMinute\r\n    let endH = this.props.origin.endHour\r\n    let endM = this.props.origin.endMinute\r\n    let form = this.props.origin.formValues\r\n    let color = ''\r\n\r\n    // 予定が始まる時間が空か確かめる（1時間単位）\r\n    if (!startH && this.props.origin.backups[0]) {\r\n      startH = this.props.origin.backups[0]\r\n    } else if (!startH && !this.props.origin.backups[0]) {\r\n      startH = '0'\r\n    }\r\n\r\n    //予定が始まる時間が空か確かめる（1分単位）\r\n    if (!startM && this.props.origin.backups[1]) {\r\n      startM = this.props.origin.backups[1]\r\n    } else if (!startM && !this.props.origin.backups[1]) {\r\n      startM = '00'\r\n    }\r\n\r\n    //予定が終わる時間が空か確かめる（1時間単位）\r\n    if (!endH && this.props.origin.backups[2]) {\r\n      if (this.props.origin.startHour > this.props.origin.backups[2]) {\r\n        endH = this.props.origin.startHour\r\n      } else {\r\n        endH = this.props.origin.backups[2]\r\n      }\r\n    } else if (!endH && !this.props.origin.backups[2] && startH) {\r\n      endH = startH\r\n    }\r\n\r\n    //予定が終わる時間が空か確かめる（1分単位）\r\n    if (!endM && this.props.origin.backups[3]) {\r\n      endM = this.props.origin.backups[3]\r\n    } else if (!endM && !this.props.origin.backups[3] && startM) {\r\n      endM = startM\r\n    }\r\n\r\n    //予定内容が空か確かめる\r\n    if (!form && this.props.origin.backups[4]) {\r\n      form = this.props.origin.backups[4]\r\n    } else if (!form && !this.props.origin.backups[4]) {\r\n      form = ''\r\n    }\r\n\r\n    if (!this.props.origin.backColor && this.props.origin.backups[5]) {\r\n      color = this.props.origin.backups[5]\r\n    } else if (!this.props.origin.backColor && !this.props.origin.backups[5]) {\r\n      color = 'black'\r\n    } else {\r\n      color = this.props.origin.backColor\r\n    }\r\n\r\n    //入力処理の間違いを防ぐ\r\n    if (endH < startH) {\r\n      endH = startH\r\n    }\r\n    if (startH === endH && startM > endM) {\r\n      endM = startM\r\n    }\r\n\r\n    //予定の開始時間と終了時間を出力する表示に変更\r\n    let startTime = startH + ':' + startM\r\n    let endTime = endH + ':' + endM\r\n\r\n    if (index !== -1) {\r\n      copySate[date].push({\r\n        id: random_id,\r\n        text: (startTime + '～' + endTime + '\\n' + form),\r\n        backup: [startH, startM, endH, endM, form],\r\n        backColor: color\r\n      })\r\n    }\r\n    else if (form && startTime !== ':' || endTime !== ':') {\r\n      copySate[date] = [\r\n        {\r\n          id: random_id,\r\n          text: (startTime + '～' + endTime + '\\n' + form),\r\n          backup: [startH, startM, endH, endM, form],\r\n          backColor: color\r\n        }\r\n      ]\r\n    }\r\n    this.props.setPlans(copySate)\r\n    this.props.handleDelete()\r\n    this.props.inputDelete()\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.origin.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.submit.bind(this)}>\r\n          <div className='modal-back' onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button' onClick={this.props.closeModal}>×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <div className='time'>\r\n                  <p>選択した日 : {this.formatDate(this.props.origin.selectedDate)}</p>\r\n                  <p className='plans-time'>予定時間</p>\r\n                  <div className='time-box'>\r\n                    <StartHour\r\n                      setStartHour={this.props.setStartHour.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>:</p>\r\n                    <StartMinute\r\n                      setStartMinute={this.props.setStartMinute.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>～</p>\r\n                    <EndHour\r\n                      setEndHour={this.props.setEndHour.bind(this)}\r\n                      origin={this.props.origin}\r\n                    />\r\n                    <p>:</p>\r\n                    <EndMinute\r\n                      setEndMinute={this.props.setEndMinute.bind(this)}\r\n                      origin={this.props.origin}\r\n                    />\r\n                  </div>\r\n                  <div className='select-color'>\r\n                    <p>予定の背景色</p>\r\n                    <TileColor\r\n                      setTileColor={this.props.setTileColor.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className='plan-contents'>予定の内容</p>\r\n                <input required\r\n                  onChange={this.props.handleChange} defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\endHour.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\startHour.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\endMinute.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\tileColor.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\CalendarParts\\set_time\\startMinute.js",[],"C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SocialLogin\\Google.js",["127"],"import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport firebase from '../../../Firebase'\r\n\r\nclass GoogleAuth extends Component {\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    //ログイン中ユーザーの取得\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({ user })\r\n        })\r\n    }\r\n\r\n    login() {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then(() => {\r\n                this.props.GoogleLogin()\r\n            })\r\n            .catch(() => {\r\n                //エラー発生時\r\n                alert('error')\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        firebase.auth().signOut()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <p className=\"App-intro\">\r\n                    ID: {this.state.user && this.state.user.uid}\r\n                </p>\r\n\r\n                {this.state.user ? (\r\n                    <button onClick={this.logout}>Google Logout</button>\r\n                ) : (\r\n                    <button onClick={this.login}>Google Login</button>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(GoogleAuth)","C:\\Users\\takumi\\Desktop\\calendar\\src\\components\\login\\SocialLogin\\Facebook.js",["128"],{"ruleId":"129","severity":1,"message":"130","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"135","line":8,"column":7,"nodeType":"131","messageId":"132","endLine":8,"endColumn":11},{"ruleId":"129","severity":1,"message":"136","line":115,"column":11,"nodeType":"131","messageId":"132","endLine":115,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":135,"column":9,"nodeType":"139","endLine":135,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":147,"column":11,"nodeType":"139","endLine":147,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":161,"column":11,"nodeType":"139","endLine":161,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":174,"column":11,"nodeType":"139","endLine":174,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":186,"column":11,"nodeType":"139","endLine":186,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":199,"column":11,"nodeType":"139","endLine":199,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":212,"column":11,"nodeType":"139","endLine":212,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":224,"column":11,"nodeType":"139","endLine":224,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":243,"column":9,"nodeType":"139","endLine":243,"endColumn":30},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"129","severity":1,"message":"146","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"147","severity":2,"message":"148","line":4,"column":38,"nodeType":"131","messageId":"149","endLine":4,"endColumn":47},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":7,"column":7,"nodeType":"131","messageId":"132","endLine":7,"endColumn":11},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":73,"column":80,"nodeType":"154","endLine":73,"endColumn":107},{"ruleId":"129","severity":1,"message":"155","line":25,"column":9,"nodeType":"131","messageId":"132","endLine":25,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":117,"column":19,"nodeType":"158","messageId":"159","endLine":117,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":117,"column":40,"nodeType":"158","messageId":"159","endLine":117,"endColumn":42},{"ruleId":"129","severity":1,"message":"160","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"160","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},"no-unused-vars","'CalendarBoard' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'RenderList' is defined but never used.","'Tool' is assigned a value but never used.","'newMonth_days' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"'react' is defined but never used.","no-undef","'Component' is not defined.","undef",["161"],["162"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'finishSignUp' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]