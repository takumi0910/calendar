[{"C:\\Users\\takumi\\calendar\\src\\index.js":"1","C:\\Users\\takumi\\calendar\\src\\App.js":"2","C:\\Users\\takumi\\calendar\\src\\form.js":"3","C:\\Users\\takumi\\calendar\\src\\store\\index.js":"4","C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js":"5","C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js":"6","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\index.js":"7","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\App.js":"8","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\modal.js":"9","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Modal.js":"10","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\start_hour.js":"11","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\login\\Auth.js":"12","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Nav.js":"13","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\login\\Login.js":"14","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\start_minute.js":"15","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\end_hour.js":"16","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\end_minute.js":"17","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\tile_color.js":"18"},{"size":314,"mtime":1615798829567,"results":"19","hashOfConfig":"20"},{"size":14616,"mtime":1615798665403,"results":"21","hashOfConfig":"20"},{"size":1563,"mtime":1612856435983,"results":"22","hashOfConfig":"20"},{"size":749,"mtime":1612855787878,"results":"23","hashOfConfig":"20"},{"size":638,"mtime":1615428811278,"results":"24","hashOfConfig":"20"},{"size":239,"mtime":1615798863426,"results":"25","hashOfConfig":"20"},{"size":232,"mtime":1620135862694,"results":"26","hashOfConfig":"27"},{"size":9045,"mtime":1620286946152,"results":"28","hashOfConfig":"27"},{"size":3622,"mtime":1620282363148,"results":"29","hashOfConfig":"27"},{"size":2073,"mtime":1618459600977,"results":"30","hashOfConfig":"31"},{"size":770,"mtime":1620282679038,"results":"32","hashOfConfig":"27"},{"size":378,"mtime":1620282933183,"results":"33","hashOfConfig":"27"},{"size":631,"mtime":1620237714570,"results":"34","hashOfConfig":"27"},{"size":1436,"mtime":1620285109853,"results":"35","hashOfConfig":"27"},{"size":873,"mtime":1620280167337,"results":"36","hashOfConfig":"27"},{"size":1406,"mtime":1620280185986,"results":"37","hashOfConfig":"27"},{"size":3080,"mtime":1620280168402,"results":"38","hashOfConfig":"27"},{"size":548,"mtime":1620280334844,"results":"39","hashOfConfig":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"y8a8bw",{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1wvzljs",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"wdt5tn",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},"C:\\Users\\takumi\\calendar\\src\\index.js",["89","90","91","92"],"C:\\Users\\takumi\\calendar\\src\\App.js",["93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\takumi\\calendar\\src\\form.js",[],["103","104"],"C:\\Users\\takumi\\calendar\\src\\store\\index.js",[],["105","106"],"C:\\Users\\takumi\\calendar\\src\\components\\localStorage.js",["107","108"],"C:\\Users\\takumi\\calendar\\src\\components\\LocalStorage.js",[],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\index.js",["109","110"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));",["111","112"],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\App.js",["113","114"],"import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport Modal from \"./components/modal\"\nimport Login from './components/login/Login';\nimport Auth from './components/login/Auth';\nimport Nav from './components/Nav'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: true,\n      month_days: {},\n      selectedDate: '',\n      backups: '',\n      formvalues: '',\n      fixed_time: '',\n      start_hour: '',\n      start_minute: '',\n      end_hour: '',\n      end_minute: '',\n      back_color: '',\n      title: ''\n    };\n  }\n\n  // state の日付と同じ表記に変換\n  getFormatDate(date) {\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\n  }\n\n  //日付ブロックをクリックした時の処理\n  openModal(value, e) {\n    if (e.target.title === 'delete') {\n      this.setState({ isSubmitted: true })\n    } else {\n      this.setState({ isSubmitted: false })\n    }\n    this.setState({ selectedDate: value })\n  }\n\n  //モーダルを閉じた際に使い回すstateの更新処理\n  inputDelete() {\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n    this.setState({ back_color: '' })\n  }\n\n  //モーダル内の×ボタンを押したときの処理\n  closeModal() {\n    this.setState({ isSubmitted: true })\n    this.setState({ backups: '' })\n    this.inputDelete()\n  }\n\n  //モーダル表示中にモーダル外を押した際の処理\n  keepModal(e) {\n    let modal_class = e.target.className\n    if (modal_class === 'modal-back') {\n      this.setState({ isSubmitted: true })\n      this.setState({ backups: '' })\n      this.inputDelete()\n    }\n  }\n\n  //カレンダーで予定を出力\n  getTileContent({ date, view }) {\n    if (view !== 'month') {\n      return null;\n    }\n    const day = this.getFormatDate(date);\n    return (\n      <p>\n        <br />\n        {\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\n            return (\n              <div className='plans'>\n                <button className={day} id={date.id} title='delete' style={{ backgroundColor: date.back_color }} onClick={this.deleteState}>×</button>\n                <button className={day} id={date.id} style={{ backgroundColor: date.back_color }} onClick={this.editState}>{date.text}</button>\n                <br />\n              </div>\n            )\n          })\n        }\n      </p>\n    );\n  }\n\n  //ランダムなidの作成\n  getUniqueStr(myStrong) {\n    var strong = 1000;\n    if (myStrong) strong = myStrong;\n    return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n  }\n\n  //予定追加or予定編集処理\n  handleSubmit() {\n    this.setState({ isSubmitted: true })\n\n    let date = this.getFormatDate(new Date(this.state.selectedDate))\n\n    const copySate = this.state.month_days\n\n    const dates = Object.keys(copySate)\n\n    const index = dates.indexOf(date)\n\n    const random_id = this.getUniqueStr()\n\n    date = Number(date)\n\n\n    //stateを変数に代入\n    let start_h = this.state.start_hour\n    let start_m = this.state.start_minute\n    let end_h = this.state.end_hour\n    let end_m = this.state.end_minute\n    let form = this.state.formvalues\n    let color = ''\n\n    // 予定が始まる時間が空か確かめる（1時間単位）\n    if (!start_h && this.state.backups[0]) {\n      start_h = this.state.backups[0]\n    } else if (!start_h && !this.state.backups[0]) {\n      start_h = '0'\n    }\n\n    //予定が始まる時間が空か確かめる（1分単位）\n    if (!start_m && this.state.backups[1]) {\n      start_m = this.state.backups[1]\n    } else if (!start_m && !this.state.backups[1]) {\n      start_m = '00'\n    }\n\n    //予定が終わる時間が空か確かめる（1時間単位）\n    if (!end_h && this.state.backups[2]) {\n      if (this.state.start_hour > this.state.backups[2]) {\n        end_h = this.state.start_hour\n      } else {\n        end_h = this.state.backups[2]\n      }\n    } else if (!end_h && !this.state.backups[2] && start_h) {\n      end_h = start_h\n    }\n\n    //予定が終わる時間が空か確かめる（1分単位）\n    if (!end_m && this.state.backups[3]) {\n      end_m = this.state.backups[3]\n    } else if (!end_m && !this.state.backups[3] && start_m) {\n      end_m = start_m\n    }\n\n    //予定内容が空か確かめる\n    if (!form && this.state.backups[4]) {\n      form = this.state.backups[4]\n    } else if (!form && !this.state.backups[4]) {\n      form = ''\n    }\n\n\n    if (!this.state.back_color && this.state.backups[5]) {\n      color = this.state.backups[5]\n    } else if (!this.state.back_color && !this.state.backups[5]) {\n      color = 'black'\n    } else {\n      color = this.state.back_color\n    }\n\n    //入力処理の間違いを防ぐ\n    if (end_h < start_h) {\n      end_h = start_h\n    }\n    if (start_h === end_h && start_m > end_m) {\n      end_m = start_m\n    }\n\n    //予定の開始時間と終了時間を出力する表示に変更\n    let start_time = start_h + ':' + start_m\n    let end_time = end_h + ':' + end_m\n\n\n    if (!form && !this.state.backups[4]) {\n      this.setState({ form_error: true })\n    }\n    else if (index !== -1) {\n      copySate[date].push({\n        id: random_id,\n        text: (start_time + '～' + end_time + '\\n' + form),\n        backup: [start_h, start_m, end_h, end_m, form],\n        back_color: color\n      })\n    }\n    else if (form && start_time !== ':' || end_time !== ':') {\n      copySate[date] = [\n        {\n          id: random_id,\n          text: (start_time + '～' + end_time + '\\n' + form),\n          backup: [start_h, start_m, end_h, end_m, form],\n          back_color: color\n        }\n      ]\n    }\n    this.setState({ month_days: copySate })\n    this.setState({ backups: '' })\n    this.inputDelete()\n  }\n\n  //予定を編集する処理\n  editState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const onedays = this.state.month_days[day]\n\n    for (let i = 0; i < onedays.length; i++) {\n      let oneday = onedays[i]\n      if (oneday.id === key) {\n        this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4], oneday.back_color] })\n        this.deleteState(e)\n      }\n    }\n  }\n\n  //予定を消す処理\n  deleteState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const id_copy = this.state.month_days[day]\n    this.inputDelete()\n\n    for (let i = 0; i < id_copy.length; i++) {\n      if (id_copy[i].id === key) {\n        this.state.month_days[day].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\n  componentDidMount() {\n    if (localStorage.app) {\n      const saveDate = JSON.parse(localStorage.app);\n      this.setState({\n        month_days: saveDate.month_days,\n      })\n    }\n  }\n\n  // stateが変更されたら実行\n  componentDidUpdate() {\n    // ローカルストレージにステートの情報を保存\n    localStorage.setItem('app', JSON.stringify(this.state));\n  }\n\n  Set_starthour(start_hour) {\n    this.setState({ start_hour });\n  }\n\n  Set_startminute(start_minute) {\n    this.setState({ start_minute });\n  }\n\n  Set_endhour(end_hour) {\n    this.setState({ end_hour })\n  }\n\n  Set_endminute(end_minute) {\n    this.setState({ end_minute });\n  }\n\n  Set_tileColor(back_color) {\n    this.setState({ back_color });\n  }\n\n  Set_fixed_sh(){\n    this.setState({ })\n  }\n\n  //予定の内容を設定\n  handleChange(event) {\n    const value = event.target.value\n    this.setState({ formvalues: value })\n  }\n\n  render() {\n    const title = ({ date, view }) => this.getTileContent({ date, view })\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Auth>\n            <Nav />\n            <Calendar\n              locale=\"ja-JP\"\n              tileContent={title}\n              value={this.state.date}\n              onClickDay={this.openModal.bind(this)}\n            />\n            <Modal\n              handleChange={this.handleChange.bind(this)}\n              handleSubmit={this.handleSubmit.bind(this)}\n              Set_starthour={this.Set_starthour.bind(this)}\n              Set_startminute={this.Set_startminute.bind(this)}\n              Set_endhour={this.Set_endhour.bind(this)}\n              Set_endminute={this.Set_endminute.bind(this)}\n              Set_tileColor={this.Set_tileColor.bind(this)}\n              getUniqueStr={this.getUniqueStr.bind(this)}\n              closeModal={this.closeModal.bind(this)}\n              keepModal={this.keepModal.bind(this)}\n              origin={this.state}\n            />\n          </Auth>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\modal.js",["115","116","117","118","119"],"import React from 'react'\r\nimport End_Hour from './set_time/end_hour'\r\nimport End_Minute from './set_time/end_minute'\r\nimport Start_Hour from './set_time/start_hour'\r\nimport TileColor from './set_time/tile_color'\r\nimport Start_Minute from './set_time/start_minute'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.origin.backups[4] !== null) {\r\n      return this.props.origin.backups[4]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.origin.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back' onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button' onClick={this.props.closeModal}>×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <div className='time'>\r\n                  <p>選択した日 : {this.formatDate(this.props.origin.selectedDate)}</p>\r\n                  <p className='plans-time'>予定時間</p>\r\n                  <div className='time-box'>\r\n                    <Start_Hour\r\n                      Set_starthour={this.props.Set_starthour.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>:</p>\r\n                    <Start_Minute\r\n                      Set_startminute={this.props.Set_startminute.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>～</p>\r\n                    <End_Hour\r\n                      Set_endhour={this.props.Set_endhour.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                      start_hour={this.props.origin.start_hour}\r\n                      end_hour={this.props.origin.end_hour}\r\n                    />\r\n                    <p>:</p>\r\n                    <End_Minute\r\n                      Set_endminute={this.props.Set_endminute.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                      start_hour={this.props.origin.start_hour}\r\n                      start_minute={this.props.origin.start_minute}\r\n                      end_hour={this.props.origin.end_hour}\r\n                      end_minute={this.props.origin.end_minute}\r\n                    />\r\n                  </div>\r\n                  <div className='select-color'>\r\n                    <p>予定の背景色</p>\r\n                    <TileColor\r\n                      Set_tileColor={this.props.Set_tileColor.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className='plan-contents'>予定の内容</p>\r\n                <input defaultValue='' required\r\n                  onChange={this.props.handleChange} defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Modal.js",["120"],"import React from 'react'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.backups[4] !== null) {\r\n      return this.props.backups[4]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back'\r\n            onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button'\r\n                  onClick={this.props.closeModal}\r\n                >×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <p>選択した日 : {this.formatDate(this.props.selectedDate)}</p>\r\n                <p className='plans-time'>予定時間</p>\r\n                <div className='time-box'>\r\n                  {this.props.Start_timeHours()}\r\n                  <p>:</p>\r\n                  {this.props.Start_timeMinutes()}\r\n                  <p>～</p>\r\n                  {this.props.End_timeHours()}\r\n                  <p>:</p>\r\n                  {this.props.End_timeMinutes()}\r\n                </div>\r\n                <p className='plans-content'>予定の内容</p>\r\n                <input defaultValue=''\r\n                  onChange={this.props.handleChange}\r\n                  defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal",["121","122"],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\start_hour.js",["123"],"import React from 'react';\r\n\r\nclass Start_Hour extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handletime(e) {\r\n        const time = e.target.value\r\n        this.props.Set_starthour(time)\r\n    }\r\n\r\n    select_starthour() {\r\n        let options = []\r\n        for (var i = 0; i <= 23; i++) {\r\n            options.push(<option value={i}>{i}</option>)\r\n        }\r\n        return (\r\n            <select defaultValue={this.props.backups[0]}\r\n                onChange={this.handletime.bind(this)} >\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.select_starthour()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Start_Hour;","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\login\\Auth.js",[],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\Nav.js",[],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\login\\Login.js",[],"C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\start_minute.js",["124"],"import React from 'react';\r\n\r\nclass Start_Minute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handletime(e) {\r\n        const time = e.target.value\r\n        this.props.Set_startminute(time)\r\n    }\r\n\r\n    select_startminute() {\r\n        let options = []\r\n        for (var i = 0; i <= 50; i++) {\r\n            let j = ('0' + i).slice(-2);\r\n            if (j % 10 === 0) {\r\n                options.push(<option value={j}>{j}</option>)\r\n            }\r\n        }\r\n        return (\r\n            <select defaultValue={this.props.backups[1]}\r\n                onChange={this.handletime.bind(this)}>\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.select_startminute()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Start_Minute;","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\end_hour.js",["125"],"import React from 'react';\r\n\r\nclass End_Hour extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handletime(e) {\r\n        const time = e.target.value\r\n        this.props.Set_endhour(time)\r\n    }\r\n\r\n    select_endhour() {\r\n        let options = []\r\n        let limited_h = this.props.start_hour\r\n        let end_h = Number(this.props.end_hour)\r\n        let end_dh = Number(this.props.backups[2])\r\n\r\n        if (!limited_h && !this.props.backups[0]) {\r\n        } else if (!limited_h && this.props.backups[0]) {\r\n            limited_h = this.props.backups[0]\r\n        }\r\n\r\n        if (!end_h && end_dh) {\r\n            end_h = end_dh\r\n        }\r\n\r\n        for (var i = 0; i <= 23; i++) {\r\n            if (i >= limited_h) {\r\n                if (i === end_h) {\r\n                    options.push(<option value={i} selected>{i}</option>)\r\n                }\r\n                else if (i !== end_h) {\r\n                    options.push(<option value={i}>{i}</option>)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <select defaultValue={this.props.backups[2]}\r\n                onChange={this.handletime.bind(this)}>\r\n                {options}\r\n            </select >\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.select_endhour()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default End_Hour;","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\end_minute.js",["126","127"],"import React from 'react';\r\n\r\nclass End_Minute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handletime(e) {\r\n        const time = e.target.value\r\n        this.props.Set_endminute(time)\r\n    }\r\n\r\n    select_endminute() {\r\n        let options = []\r\n        let start_h = this.props.start_hour\r\n        let end_m = this.props.end_minute\r\n        let end_h = this.props.end_hour\r\n        let start_dh = this.props.backups[0]\r\n        let start_dm = this.props.backups[1]\r\n        let end_dh = this.props.backups[2]\r\n        let limited_start = ''\r\n        let limited_end = ''\r\n        let limited_minutes = this.props.start_minute\r\n\r\n        //分数制限の値の算出\r\n        if (!limited_minutes && start_dm) {\r\n            limited_minutes = start_dm\r\n        } else if (!limited_minutes && start_dm) {\r\n            limited_minutes = 0\r\n        }\r\n\r\n        //初めの時間を取得\r\n        if (!start_h && !start_dh) {\r\n            limited_start = ''\r\n        } else if (!start_h && start_dh) {\r\n            limited_start = start_dh\r\n        } else {\r\n            limited_start = start_h\r\n        }\r\n\r\n        //終わりの時間を取得\r\n        if (!end_h && !end_dh && !limited_start) {\r\n            limited_end = ''\r\n        } else if (!end_h && end_dh && !limited_start) {\r\n            limited_end = end_dh\r\n        } else if (!end_h && limited_start === start_dh) {\r\n            limited_end = start_dh\r\n        } else if (!end_h && start_h) {\r\n            limited_end = start_h\r\n        } else if (end_h && start_h > end_h) {\r\n            limited_end = limited_start\r\n        } else if (end_h) {\r\n            limited_end = end_h\r\n        }\r\n\r\n        if (limited_start !== limited_end) {\r\n            for (var i = 0; i <= 50; i++) {\r\n                if (i % 10 === 0) {\r\n                    let j = ('0' + i).slice(-2);\r\n                    if (i !== Number(end_m)) {\r\n                        options.push(<option value={j}>{j}</option>)\r\n                    }\r\n                    else {\r\n                        options.push(<option value={j} selected>{j}</option>)\r\n                    }\r\n                }\r\n            }\r\n        } else if (limited_start === limited_end) {\r\n            for (var i = 0; i <= 50; i++) {\r\n                if (i % 10 === 0 && i >= limited_minutes) {\r\n                    let j = ('0' + i).slice(-2);\r\n                    if (i !== Number(end_m)) {\r\n                        options.push(<option value={j}>{j}</option>)\r\n                    }\r\n                    else {\r\n                        options.push(<option value={j} selected>{j}</option>)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <select defaultValue={this.props.backups[3]}\r\n                onChange={this.handletime.bind(this)}>\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.select_endminute()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default End_Minute;","C:\\Users\\takumi\\Desktop\\calendar backup\\src\\components\\set_time\\tile_color.js",["128"],"import React from 'react';\r\n\r\nclass TileColor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handletime(e) {\r\n        const color = e.target.value\r\n        this.props.Set_tileColor(color)\r\n    }\r\n\r\n    render() {\r\n        let default_color = this.props.backups[5]\r\n        return (\r\n            <input type='color'\r\n                defaultValue={default_color}\r\n                onChange={this.handletime.bind(this)}\r\n                >\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TileColor;",{"ruleId":"129","severity":1,"message":"130","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"135","line":8,"column":7,"nodeType":"131","messageId":"132","endLine":8,"endColumn":11},{"ruleId":"129","severity":1,"message":"136","line":115,"column":11,"nodeType":"131","messageId":"132","endLine":115,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":135,"column":9,"nodeType":"139","endLine":135,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":147,"column":11,"nodeType":"139","endLine":147,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":161,"column":11,"nodeType":"139","endLine":161,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":174,"column":11,"nodeType":"139","endLine":174,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":186,"column":11,"nodeType":"139","endLine":186,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":199,"column":11,"nodeType":"139","endLine":199,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":212,"column":11,"nodeType":"139","endLine":212,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":224,"column":11,"nodeType":"139","endLine":224,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":243,"column":9,"nodeType":"139","endLine":243,"endColumn":30},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"129","severity":1,"message":"146","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"147","severity":2,"message":"148","line":4,"column":38,"nodeType":"131","messageId":"149","endLine":4,"endColumn":47},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":7,"column":7,"nodeType":"131","messageId":"132","endLine":7,"endColumn":11},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":198,"column":19,"nodeType":"154","messageId":"155","endLine":198,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":198,"column":41,"nodeType":"154","messageId":"155","endLine":198,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":38,"column":21,"nodeType":"158","endLine":41,"endColumn":23},{"ruleId":"156","severity":1,"message":"159","line":43,"column":21,"nodeType":"158","endLine":46,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":48,"column":21,"nodeType":"158","endLine":53,"endColumn":23},{"ruleId":"156","severity":1,"message":"161","line":55,"column":21,"nodeType":"158","endLine":62,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":74,"column":54,"nodeType":"164","endLine":74,"endColumn":87},{"ruleId":"162","severity":1,"message":"163","line":46,"column":19,"nodeType":"164","endLine":46,"endColumn":52},{"ruleId":"140","replacedBy":"165"},{"ruleId":"142","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":6},{"ruleId":"171","severity":1,"message":"172","line":69,"column":22,"nodeType":"131","messageId":"173","endLine":69,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":6},"no-unused-vars","'CalendarBoard' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'RenderList' is defined but never used.","'Tool' is assigned a value but never used.","'newMonth_days' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"'react' is defined but never used.","no-undef","'Component' is not defined.","undef",["174"],["175"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-pascal-case","Imported JSX component Start_Hour must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Start_Minute must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component End_Hour must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component End_Minute must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["174"],["175"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]