{"version":3,"sources":["components/modal.js","components/login/Login.js","components/login/Auth.js","components/Nav.js","App.js","index.js"],"names":["Modal","d","date","Date","getFullYear","getMonth","getDate","this","props","backups","e","title","target","value","changeTitle","contactForm","isSubmitted","onSubmit","handleSubmit","className","onClick","keepModal","closeModal","formatDate","selectedDate","Start_timeHours","Start_timeMinutes","End_timeHours","End_timeMinutes","tileColor","defaultValue","required","onChange","handleChange","defaultForm","type","React","Component","Login","handleLogin","localStorage","setItem","history","push","state","text","console","log","withRouter","Auth","getItem","children","to","Nav","handleLogout","exact","App","editState","day","key","id","onedays","month_days","i","length","oneday","setState","backup","back_color","deleteState","id_copy","inputDelete","splice","formvalues","start_hour","start_minute","end_hour","end_minute","bind","slice","view","getFormatDate","map","style","backgroundColor","myStrong","strong","getTime","toString","Math","floor","random","event","options","j","limited_h","end_h","end_dh","selected","start_h","end_m","start_dh","start_dm","limited_start","limited_end","limited_minutes","default_color","copySate","index","Object","keys","indexOf","random_id","getUniqueStr","Number","start_m","form","color","start_time","end_time","form_error","app","saveDate","JSON","parse","stringify","path","component","locale","tileContent","getTileContent","onClickDay","openModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28f3fbba.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.backups[4] !== null) {\r\n      return this.props.backups[4]\r\n    }\r\n  }\r\n\r\n\r\n  handleChange(e) {\r\n      const title = e.target.value;\r\n      this.props.changeTitle(title);\r\n      }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back'\r\n            onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button'\r\n                  onClick={this.props.closeModal}\r\n                >×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <div className='time'>\r\n                  <p>選択した日 : {this.formatDate(this.props.selectedDate)}</p>\r\n                  <p className='plans-time'>予定時間</p>\r\n                  <div className='time-box'>\r\n                    {this.props.Start_timeHours()}\r\n                    <p>:</p>\r\n                    {this.props.Start_timeMinutes()}\r\n                    <p>～</p>\r\n                    {this.props.End_timeHours()}\r\n                    <p>:</p>\r\n                    {this.props.End_timeMinutes()}\r\n                  </div>\r\n                  <div className='select-color'>\r\n                    <p>予定の背景色</p>\r\n                    <div>{this.props.tileColor()}</div>\r\n                  </div>\r\n                </div>\r\n                <p className='plan-contents'>予定の内容</p>\r\n                <input defaultValue='' required\r\n                  onChange={this.props.handleChange}\r\n                  defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n        };\r\n    }\r\n\r\n    handleLogin = () => {\r\n        localStorage.setItem(\"login\", \"true\");\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.text)\r\n        return (\r\n            <div className='login-form'>\r\n                <div className='main'>\r\n                <div className='mail'>メールアドレス</div>\r\n                <input type=\"text\" />\r\n                <div className='pass'>パスワード</div>\r\n                <input type=\"text\"/>\r\n                <button className='login-btn' onClick={() => this.handleLogin()}>ログイン</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Auth extends React.Component {\r\n    render() {\r\n\r\n        let loginStatus = localStorage.getItem(\"login\");\r\n\r\n        if (loginStatus === \"true\") {\r\n            return this.props.children;\r\n        } else {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nclass Nav extends React.Component {\r\n\r\n    handleLogout = () => {\r\n        localStorage.setItem(\"login\", \"false\");\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className='top-menu'>\r\n                <ul className='top-menu-content'>\r\n                    <li><NavLink exact to=\"/\">Calendar</NavLink></li>\r\n                    <li><span onClick={() => this.handleLogout()}>Logout</span></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Nav);","import React from 'react'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport Modal from \"./components/modal\"\nimport Login from './components/login/Login';\nimport Auth from './components/login/Auth';\nimport Nav from './components/Nav'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: true,\n      month_days: {},\n      selectedDate: '',\n      backups: '',\n      formvalues: '',\n      start_hour: '',\n      start_minute: '',\n      end_hour: '',\n      end_minute: '',\n      back_color: '',\n      title: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Start_timeMinutes = this.Start_timeMinutes.bind(this);\n    this.Start_timeHours = this.Start_timeHours.bind(this);\n    this.End_timeHours = this.End_timeHours.bind(this);\n    this.End_timeMinutes = this.End_timeMinutes.bind(this);\n    this.tileColor = this.tileColor.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.keepModal = this.keepModal.bind(this);\n  }\n\n  // state の日付と同じ表記に変換\n  getFormatDate(date) {\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\n  }\n\n  //日付ブロックをクリックした時の処理\n  openModal(value, e) {\n    if (e.target.title === 'delete') {\n      this.setState({ isSubmitted: true })\n    } else {\n      this.setState({ isSubmitted: false })\n    }\n    this.setState({ selectedDate: value })\n  }\n\n  //モーダルを閉じた際に使い回すstateの更新処理\n  inputDelete() {\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n    this.setState({ back_color: '' })\n  }\n\n  //モーダル内の×ボタンを押したときの処理\n  closeModal() {\n    this.setState({ isSubmitted: true })\n    this.setState({ backups: '' })\n    this.inputDelete()\n  }\n\n  //モーダル表示中にモーダル外を押した際の処理\n  keepModal(e) {\n    let modal_class = e.target.className\n    if (modal_class === 'modal-back') {\n      this.setState({ isSubmitted: true })\n      this.setState({ backups: '' })\n      this.inputDelete()\n    }\n  }\n\n  //カレンダーで予定を出力\n  getTileContent({ date, view }) {\n    if (view !== 'month') {\n      return null;\n    }\n    const day = this.getFormatDate(date);\n    return (\n      <p>\n        <br />\n        {\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\n            return (\n              <div className='plans'>\n                <button className={day} id={date.id} title='delete' style={{ backgroundColor: date.back_color }} onClick={this.deleteState}>×</button>\n                <button className={day} id={date.id} style={{ backgroundColor: date.back_color }} onClick={this.editState}>{date.text}</button>\n                <br />\n              </div>\n            )\n          })\n        }\n      </p >\n    );\n  }\n\n  //ランダムなidの作成\n  getUniqueStr(myStrong) {\n    var strong = 1000;\n    if (myStrong) strong = myStrong;\n    return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n  }\n\n  //予定の内容を設定\n  handleChange(event) {\n    const value = event.target.value\n    this.setState({ formvalues: value })\n  }\n\n  //予定が始まる時間を設定（1時間単位）\n  Start_timeHours() {\n    let options = []\n    for (var i = 0; i <= 23; i++) {\n      options.push(<option value={i}>{i}</option>)\n    }\n    return (\n      <select defaultValue={this.state.backups[0]}\n        onChange={(e) => {\n          this.setState({ start_hour: e.target.value })\n        }} >\n        {options}\n      </select>\n    )\n  }\n\n  //予定が始まる時間を設定（10分単位）\n  Start_timeMinutes() {\n    let options = []\n    for (var i = 0; i <= 50; i++) {\n      let j = ('0' + i).slice(-2);\n      if (j % 10 === 0) {\n        options.push(<option value={j}>{j}</option>)\n      }\n    }\n    return (\n      <select defaultValue={this.state.backups[1]}\n        onChange={(e) => {\n          this.setState({ start_minute: e.target.value })\n        }}>\n        {options}\n      </select>\n    )\n  }\n\n  End_timeHours() {\n    let options = []\n    let limited_h = this.state.start_hour\n    let end_h = this.state.end_hour\n    let end_dh = this.state.backups[2]\n\n    if (!limited_h && !this.state.backups[0]) {\n    } else if (!limited_h && this.state.backups[0]) {\n      limited_h = this.state.backups[0]\n    }\n\n    if (!end_h && end_dh) {\n      end_h = end_dh\n    }\n\n    for (var i = 0; i <= 23; i++) {\n      if (i >= limited_h) {\n        if (i !== end_h) {\n          options.push(<option value={i}>{i}</option>)\n        }\n        else if (i === end_h) {\n          options.push(<option value={i} selected>{i}</option>)\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[2]}\n        onChange={(e) => {\n          this.setState({ end_hour: e.target.value })\n        }}>\n        {options}\n      </select >\n    )\n  }\n\n  //予定が終わる時間を設定（1分単位）\n  End_timeMinutes() {\n    let options = []\n    let start_h = this.state.start_hour\n    let end_m = this.state.end_minute\n    let end_h = this.state.end_hour\n    let start_dh = this.state.backups[0]\n    let start_dm = this.state.backups[1]\n    let end_dh = this.state.backups[2]\n    let limited_start = ''\n    let limited_end = ''\n    let limited_minutes = this.state.start_minute\n\n    //分数制限の値の算出\n    if (!limited_minutes && start_dm) {\n      limited_minutes = start_dm\n    } else if (!limited_minutes && start_dm) {\n      limited_minutes = 0\n    }\n\n    //初めの時間を取得\n    if (!start_h && !start_dh) {\n      limited_start = ''\n    } else if (!start_h && start_dh) {\n      limited_start = start_dh\n    } else {\n      limited_start = start_h\n    }\n\n    //終わりの時間を取得\n    if (!end_h && !end_dh && !limited_start) {\n      limited_end = ''\n    } else if (!end_h && end_dh && !limited_start) {\n      limited_end = end_dh\n    } else if (!end_h && limited_start === start_dh) {\n      limited_end = start_dh\n    } else if (!end_h && start_h) {\n      limited_end = start_h\n    } else if (end_h && start_h > end_h) {\n      limited_end = limited_start\n    } else if (end_h) {\n      limited_end = end_h\n    }\n\n    if (limited_start !== limited_end) {\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 === 0) {\n          let j = ('0' + i).slice(-2);\n          if (i !== end_m) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    } else if (limited_start === limited_end) {\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 === 0 && i >= limited_minutes) {\n          let j = ('0' + i).slice(-2);\n          if (i !== end_m) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[3]}\n        onChange={(e) => this.setState({ end_minute: e.target.value })}>\n        {options}\n      </select>\n    )\n  }\n\n  tileColor() {\n    let default_color = this.state.backups[5]\n    return (\n      <input type='color'\n        defaultValue={default_color}\n        onChange={(e) => this.setState({ back_color: e.target.value })}></input>\n    )\n  }\n\n  //予定追加or予定編集処理\n  handleSubmit() {\n    this.setState({ isSubmitted: true })\n\n    let date = this.getFormatDate(new Date(this.state.selectedDate))\n\n    const copySate = this.state.month_days\n\n    const dates = Object.keys(copySate)\n\n    const index = dates.indexOf(date)\n\n    const random_id = this.getUniqueStr()\n\n    date = Number(date)\n\n\n    //stateを変数に代入\n    let start_h = this.state.start_hour\n    let start_m = this.state.start_minute\n    let end_h = this.state.end_hour\n    let end_m = this.state.end_minute\n    let form = this.state.formvalues\n    let color = ''\n\n    // 予定が始まる時間が空か確かめる（1時間単位）\n    if (!start_h && this.state.backups[0]) {\n      start_h = this.state.backups[0]\n    } else if (!start_h && !this.state.backups[0]) {\n      start_h = '0'\n    }\n\n    //予定が始まる時間が空か確かめる（1分単位）\n    if (!start_m && this.state.backups[1]) {\n      start_m = this.state.backups[1]\n    } else if (!start_m && !this.state.backups[1]) {\n      start_m = '00'\n    }\n\n    //予定が終わる時間が空か確かめる（1時間単位）\n    if (!end_h && this.state.backups[2]) {\n      if (this.state.start_hour > this.state.backups[2]) {\n        end_h = this.state.start_hour\n      } else {\n        end_h = this.state.backups[2]\n      }\n    } else if (!end_h && !this.state.backups[2] && start_h) {\n      end_h = start_h\n    }\n\n    //予定が終わる時間が空か確かめる（1分単位）\n    if (!end_m && this.state.backups[3]) {\n      end_m = this.state.backups[3]\n    } else if (!end_m && !this.state.backups[3] && start_m) {\n      end_m = start_m\n    }\n\n    //予定内容が空か確かめる\n    if (!form && this.state.backups[4]) {\n      form = this.state.backups[4]\n    } else if (!form && !this.state.backups[4]) {\n      form = ''\n    }\n\n\n    if (!this.state.back_color && this.state.backups[5]) {\n      color = this.state.backups[5]\n    } else if (!this.state.back_color && !this.state.backups[5]) {\n      color = 'black'\n    } else {\n      color = this.state.back_color\n    }\n\n    //入力処理の間違いを防ぐ\n    if (end_h < start_h) {\n      end_h = start_h\n    }\n    if (start_h === end_h && start_m > end_m) {\n      end_m = start_m\n    }\n\n    //予定の開始時間と終了時間を出力する表示に変更\n    let start_time = start_h + ':' + start_m\n    let end_time = end_h + ':' + end_m\n\n\n    if (!form && !this.state.backups[4]) {\n      this.setState({ form_error: true })\n    }\n    else if (index !== -1) {\n      copySate[date].push({\n        id: random_id,\n        text: (start_time + '～' + end_time + '\\n' + form),\n        backup: [start_h, start_m, end_h, end_m, form],\n        back_color: color\n      })\n    }\n    else if (form && start_time !== ':' || end_time !== ':') {\n      copySate[date] = [\n        {\n          id: random_id,\n          text: (start_time + '～' + end_time + '\\n' + form),\n          backup: [start_h, start_m, end_h, end_m, form],\n          back_color: color\n        }\n      ]\n    }\n    this.setState({ month_days: copySate })\n    this.setState({ backups: '' })\n    this.inputDelete()\n  }\n\n  //予定を編集する処理\n  editState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const onedays = this.state.month_days[day]\n\n    for (let i = 0; i < onedays.length; i++) {\n      let oneday = onedays[i]\n      if (oneday.id === key) {\n        this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4], oneday.back_color] })\n        this.deleteState(e)\n      }\n    }\n  }\n\n  //予定を消す処理\n  deleteState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const id_copy = this.state.month_days[day]\n    this.inputDelete()\n\n    for (let i = 0; i < id_copy.length; i++) {\n      if (id_copy[i].id === key) {\n        this.state.month_days[day].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\n  componentDidMount() {\n    if (localStorage.app) {\n      const saveDate = JSON.parse(localStorage.app);\n      this.setState({\n        month_days: saveDate.month_days,\n      })\n    }\n  }\n\n  // stateが変更されたら実行\n  componentDidUpdate() {\n    // ローカルストレージにステートの情報を保存\n    localStorage.setItem('app', JSON.stringify(this.state));\n  }\n\n  changeTitle(title) {\n    this.setState({ title });\n  }\n\n  render() {\n    console.log(this.state.view)\n    const title = ({ date, view }) => this.getTileContent({ date, view })\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Auth>\n            <Nav />\n            <Calendar\n              locale=\"ja-JP\"\n              tileContent={title}\n              value={this.state.date}\n              onClickDay={this.openModal.bind(this)}\n            />\n            <Modal\n              changeTitle={this.changeTitle.bind(this)} \n              title={this.state.title}\n              isSubmitted={this.state.isSubmitted}\n              selectedDate={this.state.selectedDate}\n              formvalues={this.state.formvalues}\n              backups={this.state.backups}\n              form_error={this.state.form_error}\n              closeModal={this.closeModal}\n              keepModal={this.keepModal}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              deleteState={this.deleteState}\n              Start_timeHours={this.Start_timeHours}\n              Start_timeMinutes={this.Start_timeMinutes}\n              End_timeHours={this.End_timeHours}\n              End_timeMinutes={this.End_timeMinutes}\n              tileColor={this.tileColor}\n            />\n          </Auth>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style/style.css'\nimport login from './style/login.css'\nimport module from './style/module.css'\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}