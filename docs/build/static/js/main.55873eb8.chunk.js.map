{"version":3,"sources":["Firebase.js","components/login/Google.js","components/login/Login.js","components/login/Auth.js","components/CalendarParts/Nav.js","components/login/SignUp.js","components/CalendarParts/set_time/endHour.js","components/CalendarParts/set_time/endMinute.js","components/CalendarParts/set_time/startHour.js","components/CalendarParts/set_time/tileColor.js","components/CalendarParts/set_time/startMinute.js","components/CalendarParts/Modal.js","components/Calendar.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Google","state","user","auth","onAuthStateChanged","setState","provider","GoogleAuthProvider","signInWithRedirect","signOut","className","this","onClick","logout","login","Component","Login","values","signInWithEmailAndPassword","email","password","then","localStorage","setItem","props","history","push","catch","alert","Container","initialValues","onSubmit","handleOnLogin","validationSchema","Yup","shape","required","handleSubmit","handleChange","handleBlur","errors","touched","TextField","size","label","type","name","id","value","onChange","onBlur","invalid","Button","variant","color","to","React","withRouter","Auth","logincheck","loginCheck","children","active","spinner","text","Nav","handleLogout","exact","SignUp","createUserWithEmailAndPassword","console","log","handleOnSubmit","EndHour","e","time","target","setEndHour","options","limitedH","origin","startHour","endH","Number","endHour","endDh","backups","i","selected","defaultValue","handleTime","bind","selectEndHour","EndMinute","setEndMinute","startH","endM","endMinute","startDh","startDm","limitedStart","limitedEnd","limitedMinutes","startMinute","j","slice","t","selectEndMinute","StartHour","setStartHour","selectStartHour","TileColor","setTileColor","defaultColor","StartMinute","setStartMinute","selectStartMinute","Modal","myStrong","Date","getTime","toString","Math","floor","random","d","date","getFullYear","getMonth","getDate","handleClose","getFormatDate","selectedDate","copySate","month_days","index","Object","keys","indexOf","random_id","getUniqueStr","startM","form","formValues","backColor","startTime","endTime","backup","setPlans","handleDelete","inputDelete","contactForm","isSubmitted","submit","keepModal","closeModal","formatDate","defaultForm","MainCalendar","editState","day","key","onedays","length","oneday","back_color","deleteState","id_copy","splice","title","view","map","style","backgroundColor","event","app","saveDate","JSON","parse","stringify","locale","tileContent","getTileContent","onClickDay","openModal","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55873eb8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\nexport default firebase;","import React, { Component } from 'react'\r\nimport firebase from '../../Firebase'\r\n\r\nclass Google extends Component {\r\n  state = {\r\n    user: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ user })\r\n    })\r\n  }\r\n\r\n  login() {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    firebase.auth().signInWithRedirect(provider)\r\n  }\r\n  \r\n  logout() {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\">\r\n        {this.state.user ? (\r\n          <button onClick={this.logout}>Google Logout</button>\r\n        ) : (\r\n          <button onClick={this.login}>Google Login</button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Google","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\nimport Shot from './Google';\r\n\r\nclass Login extends React.Component {\r\n    handleOnLogin(values) {\r\n        //サインイン（ログイン）処理\r\n        firebase.auth().signInWithEmailAndPassword(values.email, values.password)\r\n            .then(() => {\r\n                //正常終了時\r\n                localStorage.setItem(\"login\", true);\r\n                this.props.history.push(\"/\");\r\n\r\n            })\r\n            .catch(() => {\r\n                //エラー発生時\r\n                alert('error');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='back'>\r\n                <Container className='login-form'>\r\n                    <Formik\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={(values) => this.handleOnLogin(values)}\r\n                        validationSchema={Yup.object().shape({\r\n                            email: Yup.string('メールアドレスを正しい形式で入力してください').email('メールアドレスを正しい形式で入力してください').required('メールアドレスは記入必須です'),\r\n                            password: Yup.string('パスワードは6文字以上で設定してください').required('パスワードは入力必須です'),\r\n                        })}\r\n                    >\r\n                        {\r\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        size='medium'\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className='email'\r\n                                        id=\"email-form\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.email && errors.email ? true : false}\r\n                                    />\r\n                                    <div>{errors.email}</div>\r\n                                    <TextField label=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password-form\"\r\n                                        className='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.password && errors.password ? true : false}\r\n                                    />\r\n                                    <div>{errors.password}</div>\r\n                                    <Button className='btn' variant=\"contained\" color='primary' type='submit'>ログイン</Button>\r\n                                </form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                    <Shot />\r\n                    <div className='signup-wrap'>\r\n                        <p className='signup'>初めてご利用される方はこちら<Link to='/signup'><a className='signup-link'>新規登録</a></Link></p>\r\n\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nclass Auth extends React.Component {\r\n    state = {\r\n        logincheck: false,\r\n        login: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    loginCheck: true,\r\n                    login: true,\r\n                });\r\n\r\n            } else {\r\n                this.setState({\r\n                    loginCheck: true,\r\n                    login: false,\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loginCheck) {\r\n            return (\r\n                <LoadingOverlay\r\n                    active={true}\r\n                    spinner\r\n                    text='Loading...'\r\n                >\r\n                    <div className='loading'></div>\r\n                </ LoadingOverlay>\r\n            );\r\n        }\r\n\r\n        if (this.state.login) {\r\n            return this.props.children;\r\n        } else {\r\n            return <Redirect to=\"login\" />\r\n        }\r\n\r\n    }\r\n}\r\nexport default Auth;","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\n\r\nclass Nav extends React.Component {\r\n\r\n    handleLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className='top-menu'>\r\n                <ul className='top-menu-content'>\r\n                    <li><NavLink exact to=\"/\">Calendar</NavLink></li>\r\n                    <li><span onClick={() => this.handleLogout()}>Logout</span></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Nav);","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport firebase from '../../Firebase';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    handleOnSubmit(values) {\r\n        //新規登録処理\r\n        firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\r\n            .then(() => {\r\n                //Homeに移動\r\n                this.props.history.push(\"/login\");\r\n            })\r\n            .catch(() => {\r\n                console.log('error')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let finishSignUp;\r\n        finishSignUp = (\r\n            <div className='finish'>\r\n                <h2>登録完了</h2>\r\n                <Link to='/login'>\r\n                    <button>ログイン画面へ</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div className='back'>\r\n                <Container className='login-form'>\r\n                    <h2 className='signup-title'>新規会員登録</h2>\r\n                    <Formik\r\n                        initialValues={{ email: '', password: '' }}\r\n                        onSubmit={(values) => this.handleOnSubmit(values)}\r\n                        validationSchema={Yup.object().shape({\r\n                            email: Yup.string('メールアドレスを正しい形式で入力してください').email('メールアドレスを正しい形式で入力してください').required('メールアドレスは記入必須です'),\r\n                            password: Yup.string('パスワードは6文字以上で設定してください').required('パスワードは入力必須です'),\r\n                        })}\r\n                    >\r\n                        {\r\n                            ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        size='medium'\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className='email'\r\n                                        id=\"email-form\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.email && errors.email ? true : false}\r\n                                    />\r\n                                    <div>{errors.email}</div>\r\n                                    <TextField label=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password-form\"\r\n                                        className='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        invalid={touched.password && errors.password ? true : false}\r\n                                    />\r\n                                    <div>{errors.password}</div>\r\n                                    <Button className='btn' variant=\"contained\" color='primary' type='submit'>登録</Button>\r\n                                </form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);","import React from 'react';\r\n\r\nclass EndHour extends React.Component {\r\n\r\n    handleTime(e) {\r\n        const time = e.target.value\r\n        this.props.setEndHour(time)\r\n    }\r\n\r\n    selectEndHour() {\r\n        let options = []\r\n        let limitedH = this.props.origin.startHour\r\n        let endH = Number(this.props.origin.endHour)\r\n        let endDh = Number(this.props.origin.backups[2])\r\n\r\n        if (!limitedH && !this.props.origin.backups[0]) {\r\n        } else if (!limitedH && this.props.origin.backups[0]) {\r\n            limitedH = this.props.origin.backups[0]\r\n        }\r\n\r\n        if (!endH && endDh) {\r\n            endH = endDh\r\n        }\r\n\r\n        for (var i = 0; i <= 23; i++) {\r\n            if (i >= limitedH) {\r\n                if (i === endH) {\r\n                    options.push(<option value={i} selected>{i}</option>)\r\n                }\r\n                else if (i !== endH) {\r\n                    options.push(<option value={i}>{i}</option>)\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <select defaultValue={this.props.origin.backups[2]}\r\n                onChange={this.handleTime.bind(this)}>\r\n                {options}\r\n            </select >\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectEndHour()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EndHour;","import React from 'react';\r\n\r\nclass EndMinute extends React.Component {\r\n\r\n\r\n    handleTime(e) {\r\n        const time = e.target.value\r\n        this.props.setEndMinute(time)\r\n    }\r\n\r\n    selectEndMinute() {\r\n        let options = []\r\n        let startH = this.props.origin.startHour\r\n        let endM = this.props.origin.endMinute\r\n        let endH = this.props.origin.endHour\r\n        let startDh = this.props.origin.backups[0]\r\n        let startDm = this.props.origin.backups[1]\r\n        let endDh = this.props.origin.backups[2]\r\n        let limitedStart = ''\r\n        let limitedEnd = ''\r\n        let limitedMinutes = this.props.origin.startMinute\r\n\r\n        //分数制限の値の算出\r\n        if (!limitedMinutes && startDm) {\r\n            limitedMinutes = startDm\r\n        } else if (!limitedMinutes && startDm) {\r\n            limitedMinutes = 0\r\n        }\r\n\r\n        //初めの時間を取得\r\n        if (!startH && !startDh) {\r\n            limitedStart = ''\r\n        } else if (!startH && startDh) {\r\n            limitedStart = startDh\r\n        } else {\r\n            limitedStart = startH\r\n        }\r\n\r\n        //終わりの時間を取得\r\n        if (!endH && !endDh && !limitedStart) {\r\n            limitedEnd = ''\r\n        } else if (!endH && endDh && !limitedStart) {\r\n            limitedEnd = endDh\r\n        } else if (!endH && limitedStart === startDh) {\r\n            limitedEnd = startDh\r\n        } else if (!endH && startH) {\r\n            limitedEnd = startH\r\n        } else if (endH && startH > endH) {\r\n            limitedEnd = limitedStart\r\n        } else if (endH) {\r\n            limitedEnd = endH\r\n        }\r\n\r\n        if (limitedStart !== limitedEnd) {\r\n            for (var i = 0; i <= 50; i++) {\r\n                if (i % 10 === 0) {\r\n                    let j = ('0' + i).slice(-2);\r\n                    if (i !== Number(endM)) {\r\n                        options.push(<option value={j}>{j}</option>)\r\n                    }\r\n                    else {\r\n                        options.push(<option value={j} selected>{j}</option>)\r\n                    }\r\n                }\r\n            }\r\n        } else if (limitedStart === limitedEnd) {\r\n            for (var t = 0; t <= 50; t++) {\r\n                if (t % 10 === 0 && t >= limitedMinutes) {\r\n                    let j = ('0' + t).slice(-2);\r\n                    if (t !== Number(endM)) {\r\n                        options.push(<option value={j}>{j}</option>)\r\n                    }\r\n                    else {\r\n                        options.push(<option value={j} selected>{j}</option>)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <select defaultValue={this.props.origin.backups[3]}\r\n                onChange={this.handleTime.bind(this)}>\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectEndMinute()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EndMinute;","import React from 'react';\r\n\r\nclass StartHour extends React.Component {\r\n\r\n    handleTime(e) {\r\n        const time = e.target.value\r\n        this.props.setStartHour(time)\r\n    }\r\n\r\n    selectStartHour() {\r\n        let options = []\r\n        for (var i = 0; i <= 23; i++) {\r\n            options.push(<option value={i}>{i}</option>)\r\n        }\r\n        return (\r\n            <select defaultValue={this.props.backups[0]}\r\n                onChange={this.handleTime.bind(this)} >\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectStartHour()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartHour;","import React from 'react';\r\n\r\nclass TileColor extends React.Component {\r\n\r\n    handleTime(e) {\r\n        const color = e.target.value\r\n        this.props.setTileColor(color)\r\n    }\r\n\r\n    render() {\r\n        let defaultColor = this.props.backups[5]\r\n        return (\r\n            <input type='color'\r\n                defaultValue={defaultColor}\r\n                onChange={this.handleTime.bind(this)}\r\n                >\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TileColor;","import React from 'react';\r\n\r\nclass StartMinute extends React.Component {\r\n\r\n    handleTime(e) {\r\n        const time = e.target.value\r\n        this.props.setStartMinute(time)\r\n    }\r\n\r\n    selectStartMinute() {\r\n        let options = []\r\n        for (var i = 0; i <= 50; i++) {\r\n            let j = ('0' + i).slice(-2);\r\n            if (j % 10 === 0) {\r\n                options.push(<option value={j}>{j}</option>)\r\n            }\r\n        }\r\n        return (\r\n            <select defaultValue={this.props.backups[1]}\r\n                onChange={this.handleTime.bind(this)}>\r\n                {options}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.selectStartMinute()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartMinute;","import React from 'react'\r\nimport EndHour from './set_time/endHour'\r\nimport EndMinute from './set_time/endMinute'\r\nimport StartHour from './set_time/startHour'\r\nimport TileColor from './set_time/tileColor'\r\nimport StartMinute from './set_time/startMinute'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //ランダムなidの作成\r\n  getUniqueStr(myStrong = 1000) {\r\n    return new Date().getTime().toString(16) + Math.floor(myStrong * Math.random()).toString(16)\r\n  }\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.origin.backups[4] !== null) {\r\n      return this.props.origin.backups[4]\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.props.handleClose()\r\n\r\n    let date = this.props.getFormatDate(new Date(this.props.origin.selectedDate))\r\n\r\n    const copySate = this.props.origin.month_days\r\n\r\n    const dates = Object.keys(copySate)\r\n\r\n    const index = dates.indexOf(date)\r\n\r\n    const random_id = this.getUniqueStr()\r\n\r\n    date = Number(date)\r\n\r\n    //props.originを変数に代入\r\n    let startH = this.props.origin.startHour\r\n    let startM = this.props.origin.startMinute\r\n    let endH = this.props.origin.endHour\r\n    let endM = this.props.origin.endMinute\r\n    let form = this.props.origin.formValues\r\n    let color = ''\r\n\r\n    // 予定が始まる時間が空か確かめる（1時間単位）\r\n    if (!startH && this.props.origin.backups[0]) {\r\n      startH = this.props.origin.backups[0]\r\n    } else if (!startH && !this.props.origin.backups[0]) {\r\n      startH = '0'\r\n    }\r\n\r\n    //予定が始まる時間が空か確かめる（1分単位）\r\n    if (!startM && this.props.origin.backups[1]) {\r\n      startM = this.props.origin.backups[1]\r\n    } else if (!startM && !this.props.origin.backups[1]) {\r\n      startM = '00'\r\n    }\r\n\r\n    //予定が終わる時間が空か確かめる（1時間単位）\r\n    if (!endH && this.props.origin.backups[2]) {\r\n      if (this.props.origin.startHour > this.props.origin.backups[2]) {\r\n        endH = this.props.origin.startHour\r\n      } else {\r\n        endH = this.props.origin.backups[2]\r\n      }\r\n    } else if (!endH && !this.props.origin.backups[2] && startH) {\r\n      endH = startH\r\n    }\r\n\r\n    //予定が終わる時間が空か確かめる（1分単位）\r\n    if (!endM && this.props.origin.backups[3]) {\r\n      endM = this.props.origin.backups[3]\r\n    } else if (!endM && !this.props.origin.backups[3] && startM) {\r\n      endM = startM\r\n    }\r\n\r\n    //予定内容が空か確かめる\r\n    if (!form && this.props.origin.backups[4]) {\r\n      form = this.props.origin.backups[4]\r\n    } else if (!form && !this.props.origin.backups[4]) {\r\n      form = ''\r\n    }\r\n\r\n    if (!this.props.origin.backColor && this.props.origin.backups[5]) {\r\n      color = this.props.origin.backups[5]\r\n    } else if (!this.props.origin.backColor && !this.props.origin.backups[5]) {\r\n      color = 'black'\r\n    } else {\r\n      color = this.props.origin.backColor\r\n    }\r\n\r\n    //入力処理の間違いを防ぐ\r\n    if (endH < startH) {\r\n      endH = startH\r\n    }\r\n    if (startH === endH && startM > endM) {\r\n      endM = startM\r\n    }\r\n\r\n    //予定の開始時間と終了時間を出力する表示に変更\r\n    let startTime = startH + ':' + startM\r\n    let endTime = endH + ':' + endM\r\n\r\n    if (index !== -1) {\r\n      copySate[date].push({\r\n        id: random_id,\r\n        text: (startTime + '～' + endTime + '\\n' + form),\r\n        backup: [startH, startM, endH, endM, form],\r\n        backColor: color\r\n      })\r\n    }\r\n    else if (form && startTime !== ':' || endTime !== ':') {\r\n      copySate[date] = [\r\n        {\r\n          id: random_id,\r\n          text: (startTime + '～' + endTime + '\\n' + form),\r\n          backup: [startH, startM, endH, endM, form],\r\n          backColor: color\r\n        }\r\n      ]\r\n    }\r\n    this.props.setPlans(copySate)\r\n    this.props.handleDelete()\r\n    this.props.inputDelete()\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.origin.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.submit.bind(this)}>\r\n          <div className='modal-back' onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button' onClick={this.props.closeModal}>×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <div className='time'>\r\n                  <p>選択した日 : {this.formatDate(this.props.origin.selectedDate)}</p>\r\n                  <p className='plans-time'>予定時間</p>\r\n                  <div className='time-box'>\r\n                    <StartHour\r\n                      setStartHour={this.props.setStartHour.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>:</p>\r\n                    <StartMinute\r\n                      setStartMinute={this.props.setStartMinute.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                    <p>～</p>\r\n                    <EndHour\r\n                      setEndHour={this.props.setEndHour.bind(this)}\r\n                      origin={this.props.origin}\r\n                    />\r\n                    <p>:</p>\r\n                    <EndMinute\r\n                      setEndMinute={this.props.setEndMinute.bind(this)}\r\n                      origin={this.props.origin}\r\n                    />\r\n                  </div>\r\n                  <div className='select-color'>\r\n                    <p>予定の背景色</p>\r\n                    <TileColor\r\n                      setTileColor={this.props.setTileColor.bind(this)}\r\n                      backups={this.props.origin.backups}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className='plan-contents'>予定の内容</p>\r\n                <input required\r\n                  onChange={this.props.handleChange} defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport Modal from \"./CalendarParts/Modal\"\r\n\r\nexport default class MainCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSubmitted: true,\r\n      month_days: {},\r\n      selectedDate: '',\r\n      backups: '',\r\n      formValues: '',\r\n      startHour: '',\r\n      startMinute: '',\r\n      endHour: '',\r\n      endMinute: '',\r\n      backColor: '',\r\n      title: ''\r\n    };\r\n  }\r\n\r\n  // state の日付と同じ表記に変換\r\n  getFormatDate(date) {\r\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\r\n  }\r\n\r\n  //日付ブロックをクリックした時の処理\r\n  openModal(value, e) {\r\n    if (e.target.title === 'delete') {\r\n      this.setState({ isSubmitted: true })\r\n    } else {\r\n      this.setState({ isSubmitted: false })\r\n    }\r\n    this.setState({ selectedDate: value })\r\n  }\r\n\r\n  //モーダルを閉じた際に使い回すstateの更新処理\r\n  inputDelete() {\r\n    this.setState({ startHour: '' })\r\n    this.setState({ startMinute: '' })\r\n    this.setState({ endHour: '' })\r\n    this.setState({ endMinute: '' })\r\n    this.setState({ formValues: '' })\r\n    this.setState({ backColor: '' })\r\n  }\r\n\r\n  //モーダル内の×ボタンを押したときの処理\r\n  closeModal() {\r\n    this.setState({ isSubmitted: true })\r\n    this.setState({ backups: '' })\r\n    this.inputDelete()\r\n  }\r\n\r\n  //モーダル表示中にモーダル外を押した際の処理\r\n  keepModal(e) {\r\n    let modal_class = e.target.className\r\n    if (modal_class === 'modal-back') {\r\n      this.closeModal()\r\n    }\r\n  }\r\n\r\n  //カレンダーで予定を出力\r\n  getTileContent({ date, view }) {\r\n    if (view !== 'month') {\r\n      return null;\r\n    }\r\n    const day = this.getFormatDate(date);\r\n    return (\r\n      <p>\r\n        <br />\r\n        {\r\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\r\n            return (\r\n              <div className='plans'>\r\n                <button className={day} id={date.id} title='delete' style={{ backgroundColor: date.backColor }} onClick={this.deleteState}>×</button>\r\n                <button className={day} id={date.id} style={{ backgroundColor: date.backColor }} onClick={this.editState}>{date.text}</button>\r\n                <br />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </p>\r\n    );\r\n  }\r\n\r\n  //予定を編集する処理\r\n  editState = (e) => {\r\n    const day = e.target.className\r\n    const key = e.target.id\r\n    const onedays = this.state.month_days[day]\r\n\r\n    for (let i = 0; i < onedays.length; i++) {\r\n      let oneday = onedays[i]\r\n      if (oneday.id === key) {\r\n        this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4], oneday.back_color] })\r\n        this.deleteState(e)\r\n      }\r\n    }\r\n  }\r\n\r\n  //予定を消す処理\r\n  deleteState = (e) => {\r\n    const day = e.target.className\r\n    const key = e.target.id\r\n    const id_copy = this.state.month_days[day]\r\n    this.inputDelete()\r\n\r\n    for (let i = 0; i < id_copy.length; i++) {\r\n      if (id_copy[i].id === key) {\r\n        this.state.month_days[day].splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setStartHour(startHour) {\r\n    this.setState({ startHour });\r\n  }\r\n\r\n  setStartMinute(startMinute) {\r\n    this.setState({ startMinute });\r\n  }\r\n\r\n  setEndHour(endHour) {\r\n    this.setState({ endHour })\r\n  }\r\n\r\n  setEndMinute(endMinute) {\r\n    this.setState({ endMinute });\r\n  }\r\n\r\n  setTileColor(backColor) {\r\n    this.setState({ backColor });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const value = event.target.value\r\n    this.setState({ formValues: value })\r\n  }\r\n\r\n  setPlans(month_days) {\r\n    this.setState({ month_days })\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ isSubmitted: true })\r\n  }\r\n\r\n  handleDelete() {\r\n    this.setState({ backups: '' })\r\n  }\r\n\r\n  // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\r\n  componentDidMount() {\r\n    if (localStorage.app) {\r\n      const saveDate = JSON.parse(localStorage.app);\r\n      this.setState({\r\n        month_days: saveDate.month_days,\r\n      })\r\n    }\r\n  }\r\n\r\n  // stateが変更されたら実行\r\n  componentDidUpdate() {\r\n    localStorage.setItem('app', JSON.stringify(this.state));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state)\r\n    const title = ({ date, view }) => this.getTileContent({ date, view })\r\n    return (\r\n      <>\r\n        <Calendar\r\n          locale=\"ja-JP\"\r\n          tileContent={title}\r\n          value={this.state.date}\r\n          onClickDay={this.openModal.bind(this)}\r\n        />\r\n        <Modal\r\n          getFormatDate={this.getFormatDate.bind(this)}\r\n          handleChange={this.handleChange.bind(this)}\r\n          setStartHour={this.setStartHour.bind(this)}\r\n          setStartMinute={this.setStartMinute.bind(this)}\r\n          setEndHour={this.setEndHour.bind(this)}\r\n          setEndMinute={this.setEndMinute.bind(this)}\r\n          setTileColor={this.setTileColor.bind(this)}\r\n          closeModal={this.closeModal.bind(this)}\r\n          keepModal={this.keepModal.bind(this)}\r\n          setPlans={this.setPlans.bind(this)}\r\n          handleClose={this.handleClose.bind(this)}\r\n          handleDelete={this.handleDelete.bind(this)}\r\n          inputDelete={this.inputDelete.bind(this)}\r\n          origin={this.state}\r\n          date={this.date}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './components/login/Login';\nimport Auth from './components/login/Auth';\nimport Nav from './components/CalendarParts/Nav'\nimport SignUp from './components/login/SignUp';\nimport MainCalendar from './components/Calendar'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path='/signup' component={SignUp} />\n        <Auth>\n          <Nav />\n          <MainCalendar/>\n        </Auth>\n      </Switch>\n    </BrowserRouter>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}