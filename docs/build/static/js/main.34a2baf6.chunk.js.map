{"version":3,"sources":["components/modal.js","App.js","index.js"],"names":["Modal","d","date","Date","getFullYear","getMonth","getDate","this","props","backups","contactForm","isSubmitted","onSubmit","handleSubmit","className","onClick","keepModal","closeModal","formatDate","selectedDate","Start_timeHours","Start_timeMinutes","End_timeHours","End_timeMinutes","tileColor","defaultValue","required","onChange","handleChange","defaultForm","type","value","React","Component","App","editState","e","day","target","key","id","onedays","state","month_days","i","length","oneday","setState","backup","deleteState","id_copy","start_hour","start_minute","end_hour","end_minute","formvalues","splice","form_error","back_color","bind","slice","title","view","getFormatDate","map","style","backgroundColor","text","myStrong","strong","getTime","toString","Math","floor","random","event","options","push","j","limited_h","end_h","end_dh","selected","start_h","end_m","start_dh","start_dm","limited_start","limited_end","limited_minutes","copySate","index","Object","keys","indexOf","random_id","getUniqueStr","Number","start_m","form","start_time","end_time","localStorage","app","saveDate","JSON","parse","setItem","stringify","console","log","locale","tileContent","getTileContent","onClickDay","openModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34a2baf6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.backups[4] !== null) {\r\n      return this.props.backups[4]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back'\r\n            onClick={this.props.keepModal}>\r\n            <div className='modal '>\r\n              <div className='modal-top'>\r\n                <button className='close-button'\r\n                  onClick={this.props.closeModal}\r\n                >×</button>\r\n                <div className='add-plans'>予定登録</div>\r\n              </div>\r\n              <div className='modal-main'>\r\n                <div className='time'>\r\n                  <p>選択した日 : {this.formatDate(this.props.selectedDate)}</p>\r\n                  <p className='plans-time'>予定時間</p>\r\n                  <div className='time-box'>\r\n                    {this.props.Start_timeHours()}\r\n                    <p>:</p>\r\n                    {this.props.Start_timeMinutes()}\r\n                    <p>～</p>\r\n                    {this.props.End_timeHours()}\r\n                    <p>:</p>\r\n                    {this.props.End_timeMinutes()}\r\n                  </div>\r\n                  <div className='select-color'>\r\n                    <p>予定を入れる際の背景色</p>\r\n                    <div>{this.props.tileColor()}</div>\r\n                  </div>\r\n                </div>\r\n                <p className='plan-contents'>予定の内容</p>\r\n                <input defaultValue='' required\r\n                  onChange={this.props.handleChange}\r\n                  defaultValue={this.defaultForm()}\r\n                />\r\n                <input\r\n                  className='submit-btn'\r\n                  type='submit'\r\n                  value='登録'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","import { red } from '@material-ui/core/colors';\nimport React from 'react'\nimport Calendar from 'react-calendar';\nimport Modal from \"./components/modal\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: true,\n      form_error: false,\n      month_days: {},\n      selectedDate: '',\n      backups: '',\n      formvalues: '',\n      start_hour: '',\n      start_minute: '',\n      end_hour: '',\n      end_minute: '',\n      back_color: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Start_timeMinutes = this.Start_timeMinutes.bind(this);\n    this.Start_timeHours = this.Start_timeHours.bind(this);\n    this.End_timeHours = this.End_timeHours.bind(this);\n    this.End_timeMinutes = this.End_timeMinutes.bind(this);\n    this.tileColor = this.tileColor.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.keepModal = this.keepModal.bind(this);\n  }\n\n  // state の日付と同じ表記に変換\n  getFormatDate(date) {\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\n  }\n\n  //日付ブロックをクリックした時の処理\n  openModal(value, e) {\n    if (e.target.title === 'delete') {\n      this.setState({ isSubmitted: true })\n    } else {\n      this.setState({ isSubmitted: false })\n    }\n    this.setState({ selectedDate: value })\n  }\n\n  //モーダル内の×ボタンを押したときの処理\n  closeModal() {\n    this.setState({ isSubmitted: true })\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n  }\n\n  keepModal(e) {\n    let modal_class = e.target.className\n    if (modal_class === 'modal-back') {\n      this.setState({ isSubmitted: true })\n      this.setState({ start_hour: '' })\n      this.setState({ start_minute: '' })\n      this.setState({ end_hour: '' })\n      this.setState({ end_minute: '' })\n    }\n  }\n\n  //日付の内容を出力\n  getTileContent({ date, view }) {\n    // 月表示のときのみ\n    if (view !== 'month') {\n      return null;\n    }\n    //日付の形式を表示可能に変えてくれる\n    const day = this.getFormatDate(date);\n    return (\n      <p>\n        <br />\n        {\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\n            return (\n              <div className='plans'>\n                <button className={day} id={date.id} title='delete' style={{backgroundColor: date.back_color}} onClick={this.deleteState}>×</button>\n                <button className={day} id={date.id} style={{backgroundColor: date.back_color}} onClick={this.editState}>{date.text}</button>\n                <br />\n              </div>\n    )\n  })\n}\n      </p >\n    );\n  }\n\n//ランダムなidの作成\ngetUniqueStr(myStrong) {\n  var strong = 1000;\n  if (myStrong) strong = myStrong;\n  return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n}\n\n//予定の内容を設定\nhandleChange(event) {\n  const value = event.target.value\n  this.setState({ formvalues: value })\n}\n\n//予定が始まる時間を設定（1時間単位）\nStart_timeHours() {\n  let options = []\n  for (var i = 0; i <= 23; i++) {\n    options.push(<option value={i}>{i}</option>)\n  }\n  return (\n    <select defaultValue={this.state.backups[0]}\n      onChange={(e) => {\n        this.setState({ start_hour: e.target.value })\n      }} >\n      {options}\n    </select>\n  )\n}\n\n//予定が始まる時間を設定（10分単位）\nStart_timeMinutes() {\n  let options = []\n  for (var i = 0; i <= 50; i++) {\n    let j = ('0' + i).slice(-2);\n    if (j % 10 == 0) {\n      options.push(<option value={j}>{j}</option>)\n    }\n  }\n  return (\n    <select defaultValue={this.state.backups[1]}\n      onChange={(e) => {\n        this.setState({ start_minute: e.target.value })\n      }}>\n      {options}\n    </select>\n  )\n}\n\nEnd_timeHours() {\n  let options = []\n  let limited_h = this.state.start_hour\n  let end_h = this.state.end_hour\n  let end_dh = this.state.backups[2]\n\n  if (!limited_h && !this.state.backups[0]) {\n  } else if (!limited_h && this.state.backups[0]) {\n    limited_h = this.state.backups[0]\n  }\n\n  if (!end_h && end_dh) {\n    end_h = end_dh\n  }\n\n  for (var i = 0; i <= 23; i++) {\n    if (i >= limited_h) {\n      if (i != end_h) {\n        options.push(<option value={i}>{i}</option>)\n      }\n      else if (i == end_h) {\n        options.push(<option value={i} selected>{i}</option>)\n      }\n    }\n  }\n\n  return (\n    <select defaultValue={this.state.backups[2]}\n      onChange={(e) => {\n        this.setState({ end_hour: e.target.value })\n      }}>\n      {options}\n    </select >\n  )\n}\n\n//予定が終わる時間を設定（1分単位）\nEnd_timeMinutes() {\n  let options = []\n  let start_h = this.state.start_hour\n  let end_m = this.state.end_minute\n  let end_h = this.state.end_hour\n  let start_dh = this.state.backups[0]\n  let start_dm = this.state.backups[1]\n  let end_dh = this.state.backups[2]\n  let limited_start = ''\n  let limited_end = ''\n  let limited_minutes = this.state.start_minute\n\n  //分数制限の値の算出\n  if (!limited_minutes && start_dm) {\n    limited_minutes = start_dm\n  } else if (!limited_minutes && start_dm) {\n    limited_minutes = 0\n  }\n\n  //初めの時間を取得\n  if (!start_h && !start_dh) {\n    limited_start = ''\n  } else if (!start_h && start_dh) {\n    limited_start = start_dh\n  } else {\n    limited_start = start_h\n  }\n\n  //終わりの時間を取得\n  if (!end_h && !end_dh && !limited_start) {\n    limited_end = ''\n  } else if (!end_h && end_dh && !limited_start) {\n    limited_end = end_dh\n  } else if (!end_h && limited_start === start_dh) {\n    limited_end = start_dh\n  } else if (!end_h && start_h) {\n    limited_end = start_h\n  } else if (end_h && start_h > end_h) {\n    limited_end = limited_start\n  } else if (end_h) {\n    limited_end = end_h\n  }\n\n  if (limited_start !== limited_end) {\n    for (var i = 0; i <= 50; i++) {\n      if (i % 10 == 0) {\n        let j = ('0' + i).slice(-2);\n        if (i != end_m) {\n          options.push(<option value={j}>{j}</option>)\n        }\n        else {\n          options.push(<option value={j} selected>{j}</option>)\n        }\n      }\n    }\n  } else if (limited_start === limited_end) {\n    for (var i = 0; i <= 50; i++) {\n      if (i % 10 == 0 && i >= limited_minutes) {\n        let j = ('0' + i).slice(-2);\n        if (i != end_m) {\n          options.push(<option value={j}>{j}</option>)\n        }\n        else {\n          options.push(<option value={j} selected>{j}</option>)\n        }\n      }\n    }\n  }\n\n  return (\n    <select defaultValue={this.state.backups[3]}\n      onChange={(e) => this.setState({ end_minute: e.target.value })}>\n      {options}\n    </select>\n  )\n}\n\ntileColor(){\n  return (\n    <select \n      onChange={(e) => this.setState({ back_color: e.target.value })}>\n      <option>rgb(254 77 77)</option>\n      <option>rgb(77 128 254)</option>\n      <option>rgb(13 176 104)</option>\n      <option>rgb(154 22 229)</option>\n    </select>\n  )\n}\n\n//予定追加or予定編集処理\nhandleSubmit() {\n  this.setState({ isSubmitted: true })\n\n  let date = this.getFormatDate(new Date(this.state.selectedDate))\n\n  const copySate = this.state.month_days\n\n  const dates = Object.keys(copySate)\n\n  const index = dates.indexOf(date)\n\n  const random_id = this.getUniqueStr()\n\n  date = Number(date)\n\n\n  //stateを変数に代入\n  let start_h = this.state.start_hour\n  let start_m = this.state.start_minute\n  let end_h = this.state.end_hour\n  let end_m = this.state.end_minute\n  let form = this.state.formvalues\n\n  // 予定が始まる時間が空か確かめる（1時間単位）\n  if (!start_h && this.state.backups[0]) {\n    start_h = this.state.backups[0]\n  } else if (!start_h && !this.state.backups[0]) {\n    start_h = '0'\n  }\n\n  //予定が始まる時間が空か確かめる（1分単位）\n  if (!start_m && this.state.backups[1]) {\n    start_m = this.state.backups[1]\n  } else if (!start_m && !this.state.backups[1]) {\n    start_m = '00'\n  }\n\n  //予定が終わる時間が空か確かめる（1時間単位）\n  if (!end_h && this.state.backups[2]) {\n    if (this.state.start_hour > this.state.backups[2]) {\n      end_h = this.state.start_hour\n    } else {\n      end_h = this.state.backups[2]\n    }\n  } else if (!end_h && !this.state.backups[2] && start_h) {\n    end_h = start_h\n  }\n\n  //予定が終わる時間が空か確かめる（1分単位）\n  if (!end_m && this.state.backups[3]) {\n    end_m = this.state.backups[3]\n  } else if (!end_m && !this.state.backups[3] && start_m) {\n    end_m = start_m\n  }\n\n  //予定内容が空か確かめる\n  if (!form && this.state.backups[4]) {\n    form = this.state.backups[4]\n  } else if (!form && !this.state.backups[4]) {\n    form = ''\n  }\n\n  //入力処理の間違いを防ぐ\n  if (end_h < start_h) {\n    end_h = start_h\n  }\n  if (start_h === end_h && start_m > end_m) {\n    end_m = start_m\n  }\n\n  //予定の開始時間と終了時間を出力する表示に変更\n  let start_time = start_h + ':' + start_m\n  let end_time = end_h + ':' + end_m\n\n\n  if (!form && !this.state.backups[4]) {\n    this.setState({ form_error: true })\n  }\n  else if (index !== -1) {\n    copySate[date].push({\n      id: random_id,\n      text: (start_time + '～' + end_time + '\\n' + form),\n      backup: [start_h, start_m, end_h, end_m, form],\n      back_color: this.state.back_color\n    })\n  }\n  else if (form && start_time !== ':' || end_time !== ':') {\n    copySate[date] = [\n      {\n        id: random_id,\n        text: (start_time + '～' + end_time + '\\n' + form),\n        backup: [start_h, start_m, end_h, end_m, form],\n        back_color: this.state.back_color\n      }\n    ]\n  }\n  this.setState({ month_days: copySate })\n  this.setState({ backups: '' })\n  this.setState({ start_hour: '' })\n  this.setState({ start_minute: '' })\n  this.setState({ end_hour: '' })\n  this.setState({ end_minute: '' })\n  this.setState({ formvalues: '' })\n}\n\n//予定を編集する処理\neditState = (e) => {\n  const day = e.target.className\n  const key = e.target.id\n  const onedays = this.state.month_days[day]\n\n  for (let i = 0; i < onedays.length; i++) {\n    let oneday = onedays[i]\n    if (oneday.id === key) {\n      this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4],] })\n      this.deleteState(e)\n    }\n  }\n}\n\n//予定を消す処理\ndeleteState = (e) => {\n  const day = e.target.className\n  const key = e.target.id\n  const id_copy = this.state.month_days[day]\n\n  this.setState({ start_hour: '' })\n  this.setState({ start_minute: '' })\n  this.setState({ end_hour: '' })\n  this.setState({ end_minute: '' })\n  this.setState({ formvalues: '' })\n\n  for (let i = 0; i < id_copy.length; i++) {\n    if (id_copy[i].id === key) {\n      this.state.month_days[day].splice(i, 1);\n      break;\n    }\n  }\n}\n\n// もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\ncomponentDidMount() {\n  if (localStorage.app) {\n    const saveDate = JSON.parse(localStorage.app);\n    this.setState({\n      month_days: saveDate.month_days,\n    })\n  }\n}\n\n// stateが変更されたら実行\ncomponentDidUpdate() {\n  // ローカルストレージにステートの情報を保存\n  localStorage.setItem('app', JSON.stringify(this.state));\n}\n\nrender() {\n  console.log(this.state)\n  const title = ({ date, view }) => this.getTileContent({ date, view })\n  return (\n    <>\n      <Calendar\n        locale=\"ja-JP\"\n        tileContent={title}\n        value={this.state.date}\n        onClickDay={this.openModal.bind(this)}\n      />\n      <Modal\n        isSubmitted={this.state.isSubmitted}\n        selectedDate={this.state.selectedDate}\n        formvalues={this.state.formvalues}\n        backups={this.state.backups}\n        form_error={this.state.form_error}\n        closeModal={this.closeModal}\n        keepModal={this.keepModal}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        deleteState={this.deleteState}\n        Start_timeHours={this.Start_timeHours}\n        Start_timeMinutes={this.Start_timeMinutes}\n        End_timeHours={this.End_timeHours}\n        End_timeMinutes={this.End_timeMinutes}\n        tileColor={this.tileColor}\n      />\n    </>\n  );\n}\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}