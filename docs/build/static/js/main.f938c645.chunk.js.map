{"version":3,"sources":["components/Modal.js","App.js","index.js"],"names":["Modal","d","date","Date","getFullYear","getMonth","getDate","this","props","backups","contactForm","isSubmitted","onSubmit","handleSubmit","className","onClick","closeModal","formatDate","selectedDate","Start_timeHours","Start_timeMinutes","End_timeHours","End_timeMinutes","defaultValue","onChange","handleChange","defaultForm","type","value","React","Component","App","editState","e","day","target","key","id","onedays","state","month_days","i","length","oneday","setState","backup","deleteState","id_copy","start_hour","start_minute","end_hour","end_minute","formvalues","splice","bind","slice","title","view","getFormatDate","map","text","myStrong","strong","getTime","toString","Math","floor","random","event","options","push","j","limited_h","end_h","end_dh","selected","start_h","end_m","start_dh","start_dm","limited_start","limited_end","limited_minutes","console","log","Number","copySate","index","Object","keys","indexOf","random_id","getUniqueStr","start_m","form","start_time","end_time","alert","localStorage","app","saveDate","JSON","parse","setItem","stringify","locale","tileContent","getTileContent","onClickDay","openModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f938c645.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Modal extends React.Component {\r\n\r\n  //モーダル上部に予定を入れようとしている日付を表示\r\n  formatDate(d) {\r\n    const date = new Date(d)\r\n    return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日'\r\n  }\r\n\r\n  defaultForm() {\r\n    if (this.props.backups[4] !== null) {\r\n      return this.props.backups[4]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let contactForm;\r\n    if (this.props.isSubmitted === false) {\r\n      contactForm = (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className='modal-back'>\r\n            <div className='modal'>\r\n              <button className='close-button'\r\n                onClick={this.props.closeModal}\r\n              >×</button>\r\n              <p>{this.formatDate(this.props.selectedDate)}</p>\r\n              <p className='plans-time'>予定時間</p>\r\n              <div className='time-box'>\r\n                {this.props.Start_timeHours()}\r\n                <p>:</p>\r\n                {this.props.Start_timeMinutes()}  \r\n                <p>～</p>\r\n                {this.props.End_timeHours()}\r\n                <p>:</p>\r\n                {this.props.End_timeMinutes()}\r\n              </div>\r\n              <p className='plans-content'>予定の内容</p>\r\n              <input defaultValue=''\r\n                onChange={this.props.handleChange}\r\n                defaultValue={this.defaultForm()}\r\n              />\r\n              <input\r\n                className='submit-btn'\r\n                type='submit'\r\n                value='登録'\r\n              />\r\n            </div>\r\n          </div>\r\n        </form >\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {contactForm}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal","import React from 'react'\nimport Calendar from 'react-calendar';\nimport Modal from \"./components/Modal\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: true,\n      //月のデータ\n      month_days: {},\n      selectedDate: '',\n      backups: '',\n      formvalues: '',\n      start_hour: '',\n      start_minute: '',\n      end_hour: '',\n      end_minute: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Start_timeMinutes = this.Start_timeMinutes.bind(this);\n    this.Start_timeHours = this.Start_timeHours.bind(this);\n    this.End_timeHours = this.End_timeHours.bind(this);\n    this.End_timeMinutes = this.End_timeMinutes.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n  }\n\n\n  // state の日付と同じ表記に変換\n  getFormatDate(date) {\n    return `${date.getFullYear()}${('0' + (date.getMonth() + 1)).slice(-2)}${('0' + date.getDate()).slice(-2)}`;\n  }\n\n  //日付ブロックをクリックした時の処理\n  openModal(value, e) {\n    if (e.target.title === 'delete') {\n      this.setState({ isSubmitted: true })\n    } else {\n      this.setState({ isSubmitted: false })\n    }\n    this.setState({ selectedDate: value })\n  }\n\n  //モーダル内の×ボタンを押したときの処理\n  closeModal() {\n    this.setState({ isSubmitted: true })\n  }\n\n  //日付の内容を出力\n  getTileContent({ date, view }) {\n    // 月表示のときのみ\n    if (view !== 'month') {\n      return null;\n    }\n    //日付の形式を表示可能に変えてくれる\n    const day = this.getFormatDate(date);\n    return (\n      <p>\n        <br />\n        {\n          this.state.month_days[day] && this.state.month_days[day].map(date => {\n            return (\n              <div className='plans'>\n                <button className={day} id={date.id} title='delete' onClick={this.deleteState}>×</button>\n                <button className={day} id={date.id} onClick={this.editState}>{date.text}</button>\n                <br />\n              </div>\n            )\n          })\n        }\n      </p>\n    );\n  }\n\n  //ランダムなidの作成\n  getUniqueStr(myStrong) {\n    var strong = 1000;\n    if (myStrong) strong = myStrong;\n    return new Date().getTime().toString(16) + Math.floor(strong * Math.random()).toString(16)\n  }\n\n  //予定の内容を設定\n  handleChange(event) {\n    const value = event.target.value\n    this.setState({ formvalues: value })\n  }\n\n  //予定が始まる時間を設定（1時間単位）\n  Start_timeHours() {\n    let options = []\n    for (var i = 0; i <= 23; i++) {\n      options.push(<option value={i}>{i}</option>)\n    }\n    return (\n      <select defaultValue={this.state.backups[0]}\n        onChange={(e) => {\n          this.setState({ start_hour: e.target.value })\n        }} >\n        {options}\n      </select>\n    )\n  }\n\n  //予定が始まる時間を設定（10分単位）\n  Start_timeMinutes() {\n    let options = []\n    for (var i = 0; i <= 50; i++) {\n      let j = ('0' + i).slice(-2);\n      if (j % 10 == 0) {\n        options.push(<option value={j}>{j}</option>)\n      }\n    }\n    return (\n      <select defaultValue={this.state.backups[1]}\n        onChange={(e) => {\n          this.setState({ start_minute: e.target.value })\n        }}>\n        {options}\n      </select>\n    )\n  }\n\n  End_timeHours() {\n    let options = []\n    let limited_h = this.state.start_hour\n    let end_h = this.state.end_hour\n    let end_dh = this.state.backups[2]\n\n    if (!limited_h && !this.state.backups[0]) {\n    } else if (!limited_h && this.state.backups[0]) {\n      limited_h = this.state.backups[0]\n    }\n\n    if (!end_h && end_dh) {\n      end_h = end_dh\n    }\n\n    //疑惑の判定\n    for (var i = 0; i <= 23; i++) {\n      if (i >= limited_h) {\n        if (i != end_h) {\n          options.push(<option value={i}>{i}</option>)\n        }\n        else if (i == end_h) {\n          options.push(<option value={i} selected>{i}</option>)\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[2]}\n        onChange={(e) => {\n          this.setState({ end_hour: e.target.value })\n        }}>\n        {options}\n      </select >\n    )\n  }\n\n\n\n  //予定が終わる時間を設定（1分単位）\n  End_timeMinutes() {\n    let options = []\n    let start_h = this.state.start_hour\n    let end_m = this.state.end_minute\n    let end_h = this.state.end_hour\n    let start_dh = this.state.backups[0]\n    let start_dm = this.state.backups[1]\n    let end_dh = this.state.backups[2]\n    let limited_start = ''\n    let limited_end = ''\n    let limited_minutes = this.state.start_minute\n\n    //分数制限の値の算出\n    if (!limited_minutes && start_dm) {\n      limited_minutes = start_dm\n    } else if (!limited_minutes && start_dm) {\n      limited_minutes = 0\n    }\n\n    //初めの時間を取得\n    if (!start_h && !start_dh) {\n      limited_start = ''\n    } else if (!start_h && start_dh) {\n      limited_start = start_dh\n    } else {\n      limited_start = start_h\n    }\n\n    //終わりの時間を取得\n    if (!end_h && !end_dh && !limited_start) {\n      limited_end = ''\n    } else if (!end_h && end_dh && !limited_start) {\n      limited_end = end_dh\n    } else if (!end_h && limited_start === start_dh) {\n      limited_end = start_dh\n    } else if (!end_h && start_h) {\n      limited_end = start_h\n    } else if (end_h && start_h > end_h) {\n      limited_end = limited_start\n    } else if (end_h) {\n      limited_end = end_h\n    }\n\n    if (limited_start !== limited_end) {\n      console.log('no limit')\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 == 0) {\n          let j = ('0' + i).slice(-2);\n          if (i != end_m) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    } else if (limited_start === limited_end) {\n      console.log('limit')\n      for (var i = 0; i <= 50; i++) {\n        if (i % 10 == 0 && i >= limited_minutes) {\n          let j = ('0' + i).slice(-2);\n          if (i != end_m) {\n            options.push(<option value={j}>{j}</option>)\n          }\n          else {\n            options.push(<option value={j} selected>{j}</option>)\n          }\n        }\n      }\n    }\n\n    return (\n      <select defaultValue={this.state.backups[3]}\n        onChange={(e) => this.setState({ end_minute: e.target.value })}>\n        {options}\n      </select>\n    )\n  }\n\n  //予定追加or予定編集処理\n  handleSubmit() {\n    this.setState({ isSubmitted: true })\n\n    let date = this.getFormatDate(new Date(this.state.selectedDate))\n    date = Number(date)\n\n    const copySate = this.state.month_days\n\n    const dates = Object.keys(copySate)\n\n    const index = dates.indexOf(date)\n\n    const random_id = this.getUniqueStr()\n\n\n    //stateを変数に代入\n    let start_h = this.state.start_hour\n    let start_m = this.state.start_minute\n    let end_h = this.state.end_hour\n    let end_m = this.state.end_minute\n    let form = this.state.formvalues\n\n    // 予定が始まる時間が空か確かめる（1時間単位）\n    if (!start_h && this.state.backups[0]) {\n      start_h = this.state.backups[0]\n    } else if (!start_h && !this.state.backups[0]) {\n      start_h = '0'\n    }\n\n    //予定が始まる時間が空か確かめる（1分単位）\n    if (!start_m && this.state.backups[1]) {\n      start_m = this.state.backups[1]\n    } else if (!start_m && !this.state.backups[1]) {\n      start_m = '00'\n    }\n\n    //予定が終わる時間が空か確かめる（1時間単位）\n    if (!end_h && this.state.backups[2]) {\n      if (this.state.start_hour > this.state.backups[2]) {\n        end_h = this.state.start_hour\n      } else {\n        end_h = this.state.backups[2]\n      }\n    } else if (!end_h && !this.state.backups[2] && start_h) {\n      end_h = start_h\n    }\n\n    //予定が終わる時間が空か確かめる（1分単位）\n    if (!end_m && this.state.backups[3]) {\n      end_m = this.state.backups[3]\n    } else if (!end_m && !this.state.backups[3] && start_m) {\n      end_m = start_m\n    }\n\n    //予定内容が空か確かめる\n    if (!form && this.state.backups[4]) {\n      form = this.state.backups[4]\n    } else if (!form && !this.state.backups[4]) {\n      form = ''\n    }\n\n    //入力処理の間違いを防ぐ\n    if (end_h < start_h) {\n      end_h = start_h\n    }\n    if (start_h === end_h && start_m > end_m) {\n      end_m = start_m\n    }\n\n    //予定の開始時間と終了時間を出力する表示に変更\n    let start_time = start_h + ':' + start_m\n    let end_time = end_h + ':' + end_m\n\n\n    if (!form && !this.state.backups[4]) {\n      alert('予定を入力して下さい')\n    }\n    else if (index !== -1) {\n      copySate[date].push({\n        id: random_id,\n        text: (start_time + '～' + end_time + '\\n' + form),\n        backup: [start_h, start_m, end_h, end_m, form]\n      })\n    }\n    else if (form && start_time !== ':' || end_time !== ':') {\n      console.log(date)\n      console.log(typeof date);\n      copySate[date] = [\n        {\n          id: random_id,\n          text: (start_time + '～' + end_time + '\\n' + form),\n          backup: [start_h, start_m, end_h, end_m, form]\n        }\n      ]\n    }\n    this.setState({ month_days: copySate })\n    this.setState({ backups: '' })\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n  }\n\n  //予定を編集する処理\n  editState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const onedays = this.state.month_days[day]\n\n    for (let i = 0; i < onedays.length; i++) {\n      let oneday = onedays[i]\n      if (oneday.id === key) {\n        this.setState({ backups: [oneday.backup[0], oneday.backup[1], oneday.backup[2], oneday.backup[3], oneday.backup[4],] })\n        this.deleteState(e)\n      }\n    }\n  }\n\n  //予定を消す処理\n  deleteState = (e) => {\n    const day = e.target.className\n    const key = e.target.id\n    const id_copy = this.state.month_days[day]\n\n    this.setState({ start_hour: '' })\n    this.setState({ start_minute: '' })\n    this.setState({ end_hour: '' })\n    this.setState({ end_minute: '' })\n    this.setState({ formvalues: '' })\n\n    for (let i = 0; i < id_copy.length; i++) {\n      if (id_copy[i].id === key) {\n        this.state.month_days[day].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\n  componentDidMount() {\n    if (localStorage.app) {\n      const saveDate = JSON.parse(localStorage.app);\n      this.setState({\n        month_days: saveDate.month_days,\n      })\n    }\n  }\n\n  // stateが変更されたら実行\n  componentDidUpdate() {\n    // ローカルストレージにステートの情報を保存\n    localStorage.setItem('app', JSON.stringify(this.state));\n    // localStorage.clear()\n  }\n\n  render() {\n    const title = ({ date, view }) => this.getTileContent({ date, view })\n    console.log(this.state)\n    return (\n      <>\n        <Calendar\n          locale=\"ja-JP\"\n          tileContent={title}\n          value={this.state.date}\n          onClickDay={this.openModal.bind(this)}\n        />\n        <Modal\n          isSubmitted={this.state.isSubmitted}\n          selectedDate={this.state.selectedDate}\n          formvalues={this.state.formvalues}\n          backups={this.state.backups}\n          closeModal={this.closeModal}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          deleteState={this.deleteState}\n          Start_timeHours={this.Start_timeHours}\n          Start_timeMinutes={this.Start_timeMinutes}\n          End_timeHours={this.End_timeHours}\n          End_timeMinutes={this.End_timeMinutes}\n        />\n      </>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\nimport styles from './style.css'\n\nconst Tool = () => (\n  <div>\n    <App />\n  </div>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}